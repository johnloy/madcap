{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///madcap.core.min.js","webpack:///webpack/bootstrap 1e6e82f97a87f476eade","webpack:///./packages/madcap-core/node_modules/source-map/lib/util.js","webpack:///./packages/madcap-core/node_modules/stackframe/stackframe.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/source-map-generator.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/base64-vlq.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/array-set.js","webpack:///./packages/madcap-core/src/lib/createError.ts","webpack:///./packages/madcap-core/src/reporters/console.ts","webpack:///./packages/madcap-core/src/handlers/retryThenRecover.ts","webpack:///./packages/madcap-core/src/index.ts","webpack:///./packages/madcap-core/node_modules/stacktrace-js/stacktrace.js","webpack:///./packages/madcap-core/node_modules/error-stack-parser/error-stack-parser.js","webpack:///./packages/madcap-core/node_modules/stack-generator/stack-generator.js","webpack:///./packages/madcap-core/node_modules/stacktrace-gps/stacktrace-gps.js","webpack:///./packages/madcap-core/node_modules/source-map/source-map.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/base64.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/mapping-list.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/source-map-consumer.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/binary-search.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/quick-sort.js","webpack:///./packages/madcap-core/node_modules/source-map/lib/source-node.js","webpack:///./packages/madcap-core/src/reporters/index.ts","webpack:///./packages/madcap-core/src/reporters/errorOverlay.ts","webpack:///./packages/madcap-core/src/handlers/index.ts","webpack:///./packages/madcap-core/src/errors/UndefinedAttemptError.ts","webpack:///./packages/madcap-core/src/lib/strategy.ts"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","getArg","aArgs","aName","aDefaultValue","arguments","length","Error","urlParse","aUrl","match","urlRegexp","scheme","auth","host","port","path","urlGenerate","aParsedUrl","url","normalize","aPath","part","isAbsolute","parts","split","up","splice","join","aRoot","aPathUrl","aRootUrl","dataUrlRegexp","joined","charAt","replace","relative","level","indexOf","index","lastIndexOf","slice","Array","substr","identity","toSetString","aStr","isProtoString","fromSetString","charCodeAt","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","source","originalLine","originalColumn","generatedColumn","generatedLine","compareByGeneratedPositionsDeflated","onlyCompareGenerated","strcmp","aStr1","aStr2","compareByGeneratedPositionsInflated","supportsNullProto","create","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","apply","_isNumber","isNaN","parseFloat","isFinite","_capitalize","str","toUpperCase","substring","_getter","StackFrame","obj","props","booleanProps","numericProps","stringProps","arrayProps","concat","getArgs","args","setArgs","v","toString","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","getFileName","getLineNumber","getColumnNumber","Boolean","j","Number","k","String","SourceMapGenerator","_file","util","_sourceRoot","_skipValidation","_sources","ArraySet","_names","_mappings","MappingList","_sourcesContents","base64VLQ","_version","fromSourceMap","aSourceMapConsumer","sourceRoot","generator","file","eachMapping","mapping","newMapping","generated","line","column","original","addMapping","sources","forEach","sourceFile","content","sourceContentFor","setSourceContent","_validateMapping","has","add","aSourceFile","aSourceContent","keys","applySourceMap","aSourceMapPath","newSources","newNames","unsortedForEach","originalPositionFor","aGenerated","aOriginal","aSource","JSON","stringify","_serializeMappings","next","nameIdx","sourceIdx","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","mappings","toArray","len","encode","_generateSourcesContent","aSources","aSourceRoot","map","key","toJSON","version","names","sourcesContent","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","base64","digit","encoded","vlq","VLQ_BASE","decode","aIndex","aOutParam","continuation","strLen","shift","value","rest","_array","_set","fromArray","aArray","aAllowDuplicates","set","size","getOwnPropertyNames","sStr","isDuplicate","idx","push","at","aIdx","arePropsValid","message","validateMessage","createError","ParentError","defaultProps","isPrototypeOf","_a","defaultMessage","restDefaultProps","__rest","getMessage","CustomError","proxy","setPrototypeOf","getPrototypeOf","captureStackTrace","assign","__proto__","writable","configure","config","configRest","constructor","e","t","getOwnPropertySymbols","consoleReporter","error","__DEBUG__","console","group","log","location","origin","fileName","lineNumber","columnNumber","attempts","attemptsReportStr","reduce","report","attempt","attemptsReportLogValues","context","Attempt","retryThenRecover","warnToConfigureHandle","warn","isAttemptFunction","a","Madcap","initConfig","mergeConfig","strategy_1","isStrategyMap","createReportStrategy","handle","createHandleStrategy","stackTraceLimit","prepareError","stackFrames","trace","topFrame","attemptsMap","attemptFn","from","values","attemptName","msg","some","frame","frames","stackString","filter","f","stack","getAttemptLocation","attemptFrame","find","stackFrame","includes","contextOrFn","fnOrPastAttempts","pastAttempts","__awaiter","subattempt","fn","ret_1","ret","_this","__generator","label","StackTrace","sent","function","catch","newStackFrames","errorEvent","_b","fromError","reverse","ErrorEvent","filename","lineno","colno","window","dispatchEvent","allowUndefinedAttempts","UndefinedAttemptError_1","UndefinedAttemptError","Map","reporters_1","onerror","col","isHandled","then","bind","addEventListener","preventDefault","reason","thisArg","_arguments","P","Promise","resolve","reject","fulfilled","step","rejected","done","body","verb","op","_","y","ops","pop","trys","g","throw","return","Symbol","iterator","createError_1","handlers_1","default","reporters","handlers","ErrorStackParser","StackGenerator","StackTraceGPS","_merge","first","second","target","prop","_isShapedLikeParsableError","err","_filtered","stackframes","_options","stackframe","functionName","sourceCache","_generateError","opts","generateArtificially","getSync","parse","backtrace","gps","all","sf","resolveOriginal","pinpoint","instrument","callback","errback","__stacktraceOriginalFn","instrumented","deinstrument","errorMsg","requestOptions","req","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","setRequestHeader","headers","header","reportPayload","send","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","stacktrace","parseOpera","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","regExp","exec","tokens","locationParts","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","maxStackSize","curr","callee","test","RegExp","$1","caller","SourceMap","_xdr","_atob","b64str","atob","_parseJson","string","_findFunctionName","syntaxes","code","maxLines","Math","min","commentPos","_ensureSupportedEnvironment","_ensureStackFrameIsLegit","_findSourceMappingURL","lastSourceMappingUrl","matchSourceMappingUrl","sourceMappingUrlRegExp","_extractLocationInfoFromSourceMapSource","sourceMapConsumer","loc","mappedSource","sourceMapConsumerCache","ajax","_get","isDataUrl","offline","supportedEncodingRegexp","sourceMapStart","encodedSource","xhrPromise","method","_getSourceMapConsumer","sourceMappingURL","defaultSourceRoot","sourceMapConsumerPromise","sourceMapSource","SourceMapConsumer","getMappedLocation","mappedStackFrame","resolveMappedStackFrame","findFunctionName","guessedFunctionName","SourceNode","intToCharMap","number","charCode","generatedPositionAfter","lineA","lineB","columnA","columnB","_sorted","_last","aCallback","aThisArg","aMapping","sort","aSourceMap","sourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","Mapping","lastOffset","_sections","offset","offsetLine","offsetColumn","generatedOffset","consumer","binarySearch","quickSort","__generatedMappings","_parseMappings","__originalMappings","_charIsMappingSeparator","GENERATED_ORDER","ORIGINAL_ORDER","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","aContext","aOrder","order","_generatedMappings","_originalMappings","allGeneratedPositionsFor","needle","_findMapping","lastColumn","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","end","cachedSegments","temp","originalMappings","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","search","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","hasContentsOfAllSources","sc","nullOnMissing","fileUriAbsPath","generatedPositionFor","sectionIndex","section","bias","every","generatedPosition","sectionMappings","adjustedMapping","recursiveSearch","aLow","aHigh","aHaystack","aCompare","mid","floor","swap","ary","x","randomIntInRange","low","high","round","random","doQuickSort","comparator","r","pivotIndex","pivot","q","aLine","aColumn","aChunks","children","sourceContents","isSourceNode","REGEX_NEWLINE","fromStringWithSourceMap","aGeneratedCode","aRelativePath","addMappingWithCode","node","remainingLines","shiftNextLine","lastGeneratedLine","lastMapping","nextLine","aChunk","isArray","chunk","prepend","unshift","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","__export","errorOverlay","strategy","createStrategy","strategyDef","strategyMap","resolvedStrategy","constr","__default__","handler","remove","delete","setDefault","console_1","retryThenRecover_1"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,KAAAD,KAEAD,EAAA,OAAAA,EAAA,WAAuCA,EAAA,YAAAC,MACtC,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU9B,EAAQD,GE5DxB,QAAAgC,GAAAC,EAAAC,EAAAC,GACA,GAAAD,IAAAD,GACA,MAAAA,GAAAC,EACG,QAAAE,UAAAC,OACH,MAAAF,EAEA,UAAAG,OAAA,IAAAJ,EAAA,6BAQA,QAAAK,GAAAC,GACA,GAAAC,GAAAD,EAAAC,MAAAC,EACA,OAAAD,IAIAE,OAAAF,EAAA,GACAG,KAAAH,EAAA,GACAI,KAAAJ,EAAA,GACAK,KAAAL,EAAA,GACAM,KAAAN,EAAA,IAPA,KAYA,QAAAO,GAAAC,GACA,GAAAC,GAAA,EAiBA,OAhBAD,GAAAN,SACAO,GAAAD,EAAAN,OAAA,KAEAO,GAAA,KACAD,EAAAL,OACAM,GAAAD,EAAAL,KAAA,KAEAK,EAAAJ,OACAK,GAAAD,EAAAJ,MAEAI,EAAAH,OACAI,GAAA,IAAAD,EAAAH,MAEAG,EAAAF,OACAG,GAAAD,EAAAF,MAEAG,EAeA,QAAAC,GAAAC,GACA,GAAAL,GAAAK,EACAF,EAAAX,EAAAa,EACA,IAAAF,EAAA,CACA,IAAAA,EAAAH,KACA,MAAAK,EAEAL,GAAAG,EAAAH,KAKA,OAAAM,GAHAC,EAAAtD,EAAAsD,WAAAP,GAEAQ,EAAAR,EAAAS,MAAA,OACAC,EAAA,EAAA/C,EAAA6C,EAAAlB,OAAA,EAA8C3B,GAAA,EAAQA,IACtD2C,EAAAE,EAAA7C,GACA,MAAA2C,EACAE,EAAAG,OAAAhD,EAAA,GACK,OAAA2C,EACLI,IACKA,EAAA,IACL,KAAAJ,GAIAE,EAAAG,OAAAhD,EAAA,EAAA+C,GACAA,EAAA,IAEAF,EAAAG,OAAAhD,EAAA,GACA+C,KAUA,OANAV,GAAAQ,EAAAI,KAAA,KAEA,KAAAZ,IACAA,EAAAO,EAAA,SAGAJ,GACAA,EAAAH,OACAC,EAAAE,IAEAH,EAoBA,QAAAY,GAAAC,EAAAR,GACA,KAAAQ,IACAA,EAAA,KAEA,KAAAR,IACAA,EAAA,IAEA,IAAAS,GAAAtB,EAAAa,GACAU,EAAAvB,EAAAqB,EAMA,IALAE,IACAF,EAAAE,EAAAf,MAAA,KAIAc,MAAAlB,OAIA,MAHAmB,KACAD,EAAAlB,OAAAmB,EAAAnB,QAEAK,EAAAa,EAGA,IAAAA,GAAAT,EAAAX,MAAAsB,GACA,MAAAX,EAIA,IAAAU,MAAAjB,OAAAiB,EAAAf,KAEA,MADAe,GAAAjB,KAAAO,EACAJ,EAAAc,EAGA,IAAAE,GAAA,MAAAZ,EAAAa,OAAA,GACAb,EACAD,EAAAS,EAAAM,QAAA,eAAAd,EAEA,OAAAU,IACAA,EAAAf,KAAAiB,EACAhB,EAAAc,IAEAE,EAcA,QAAAG,GAAAP,EAAAR,GACA,KAAAQ,IACAA,EAAA,KAGAA,IAAAM,QAAA,SAOA,KADA,GAAAE,GAAA,EACA,IAAAhB,EAAAiB,QAAAT,EAAA,OACA,GAAAU,GAAAV,EAAAW,YAAA,IACA,IAAAD,EAAA,EACA,MAAAlB,EAOA,IADAQ,IAAAY,MAAA,EAAAF,GACAV,EAAAnB,MAAA,qBACA,MAAAW,KAGAgB,EAIA,MAAAK,OAAAL,EAAA,GAAAT,KAAA,OAAAP,EAAAsB,OAAAd,EAAAvB,OAAA,GASA,QAAAsC,GAAA5C,GACA,MAAAA,GAYA,QAAA6C,GAAAC,GACA,MAAAC,GAAAD,GACA,IAAAA,EAGAA,EAIA,QAAAE,GAAAF,GACA,MAAAC,GAAAD,GACAA,EAAAL,MAAA,GAGAK,EAIA,QAAAC,GAAA/C,GACA,IAAAA,EACA,QAGA,IAAAM,GAAAN,EAAAM,MAEA,IAAAA,EAAA,EACA,QAGA,SAAAN,EAAAiD,WAAA3C,EAAA,IACA,KAAAN,EAAAiD,WAAA3C,EAAA,IACA,MAAAN,EAAAiD,WAAA3C,EAAA,IACA,MAAAN,EAAAiD,WAAA3C,EAAA,IACA,MAAAN,EAAAiD,WAAA3C,EAAA,IACA,MAAAN,EAAAiD,WAAA3C,EAAA,IACA,MAAAN,EAAAiD,WAAA3C,EAAA,IACA,KAAAN,EAAAiD,WAAA3C,EAAA,IACA,KAAAN,EAAAiD,WAAA3C,EAAA,GACA,QAGA,QAAA3B,GAAA2B,EAAA,GAA2B3B,GAAA,EAAQA,IACnC,QAAAqB,EAAAiD,WAAAtE,GACA,QAIA,UAWA,QAAAuE,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAAI,OAAAH,EAAAG,MACA,YAAAD,EACAA,EAIA,KADAA,EAAAH,EAAAK,aAAAJ,EAAAI,cAEAF,EAIA,KADAA,EAAAH,EAAAM,eAAAL,EAAAK,iBACAJ,EACAC,EAIA,KADAA,EAAAH,EAAAO,gBAAAN,EAAAM,iBAEAJ,GAGAA,EAAAH,EAAAQ,cAAAP,EAAAO,cACA,IAAAL,EACAA,EAGAH,EAAAlE,KAAAmE,EAAAnE,MAaA,QAAA2E,GAAAT,EAAAC,EAAAS,GACA,GAAAP,GAAAH,EAAAQ,cAAAP,EAAAO,aACA,YAAAL,EACAA,EAIA,KADAA,EAAAH,EAAAO,gBAAAN,EAAAM,kBACAG,EACAP,EAIA,KADAA,EAAAH,EAAAI,OAAAH,EAAAG,QAEAD,EAIA,KADAA,EAAAH,EAAAK,aAAAJ,EAAAI,cAEAF,GAGAA,EAAAH,EAAAM,eAAAL,EAAAK,eACA,IAAAH,EACAA,EAGAH,EAAAlE,KAAAmE,EAAAnE,MAIA,QAAA6E,GAAAC,EAAAC,GACA,MAAAD,KAAAC,EACA,EAGAD,EAAAC,EACA,GAGA,EAOA,QAAAC,GAAAd,EAAAC,GACA,GAAAE,GAAAH,EAAAQ,cAAAP,EAAAO,aACA,YAAAL,EACAA,EAIA,KADAA,EAAAH,EAAAO,gBAAAN,EAAAM,iBAEAJ,EAIA,KADAA,EAAAQ,EAAAX,EAAAI,OAAAH,EAAAG,SAEAD,EAIA,KADAA,EAAAH,EAAAK,aAAAJ,EAAAI,cAEAF,GAGAA,EAAAH,EAAAM,eAAAL,EAAAK,eACA,IAAAH,EACAA,EAGAQ,EAAAX,EAAAlE,KAAAmE,EAAAnE,OApYAhB,EAAAgC,QAEA,IAAAU,GAAA,iEACAqB,EAAA,eAeA/D,GAAAuC,WAsBAvC,EAAAgD,cAwDAhD,EAAAmD,YA2DAnD,EAAA2D,OAEA3D,EAAAsD,WAAA,SAAAF,GACA,YAAAA,EAAAa,OAAA,MAAAb,EAAAX,MAAAC,IAyCA1C,EAAAmE,UAEA,IAAA8B,GAAA,WAEA,qBADA9E,QAAA+E,OAAA,SAwBAlG,GAAA4E,YAAAqB,EAAAtB,EAAAC,EASA5E,EAAA+E,cAAAkB,EAAAtB,EAAAI,EAsEA/E,EAAAiF,6BAuCAjF,EAAA2F,sCA8CA3F,EAAAgG,uCFoFM,SAAU/F,EAAQD,EAASO,GGpfjC,GAAA4F,GAAAC,EAAAC,GAAA,SAAAvG,EAAAC,GACA,YAKAqG,MAAAD,EAAA,MAAAG,MAAAD,EAAA,kBAAAF,KAAAI,MAAAvG,EAAAoG,GAAAD,KAAAlG,EAAAD,QAAAqG,IAMChG,EAAA,WACD,YACA,SAAAmG,GAAAhF,GACA,OAAAiF,MAAAC,WAAAlF,KAAAmF,SAAAnF,GAGA,QAAAoF,GAAAC,GACA,MAAAA,GAAA5C,OAAA,GAAA6C,cAAAD,EAAAE,UAAA,GAGA,QAAAC,GAAAlF,GACA,kBACA,MAAAzB,MAAAyB,IAWA,QAAAmF,GAAAC,GACA,GAAAA,YAAA/F,QACA,OAAAT,GAAA,EAA2BA,EAAAyG,EAAA9E,OAAkB3B,IAC7CwG,EAAArF,eAAAsF,EAAAzG,SAAA4F,KAAAY,EAAAC,EAAAzG,KACAL,KAAA,MAAAuG,EAAAO,EAAAzG,KAAAwG,EAAAC,EAAAzG,KAXA,GAAA0G,IAAA,kDACAC,GAAA,6BACAC,GAAA,oCACAC,GAAA,QAEAJ,EAAAC,EAAAI,OAAAH,EAAAC,EAAAC,EAYAN,GAAArF,WACA6F,QAAA,WACA,MAAApH,MAAAqH,MAEAC,QAAA,SAAAC,GACA,sBAAAzG,OAAAS,UAAAiG,SAAAjH,KAAAgH,GACA,SAAAE,WAAA,wBAEAzH,MAAAqH,KAAAE,GAGAG,cAAA,WACA,MAAA1H,MAAA2H,YAEAC,cAAA,SAAAL,GACA,GAAAA,YAAAX,GACA5G,KAAA2H,WAAAJ,MACa,MAAAA,YAAAzG,SAGb,SAAA2G,WAAA,8CAFAzH,MAAA2H,WAAA,GAAAf,GAAAW,KAMAC,SAAA,WAMA,OALAxH,KAAA6H,mBAAA,eACA,KAAA7H,KAAAoH,eAAA9D,KAAA,UACAtD,KAAA8H,cAAA,IAAA9H,KAAA8H,cAAA,KACA3B,EAAAnG,KAAA+H,iBAAA,IAAA/H,KAAA+H,gBAAA,KACA5B,EAAAnG,KAAAgI,mBAAA,IAAAhI,KAAAgI,kBAAA,KAKA,QAAA3H,GAAA,EAAmBA,EAAA0G,EAAA/E,OAAyB3B,IAC5CuG,EAAArF,UAAA,MAAAgF,EAAAQ,EAAA1G,KAAAsG,EAAAI,EAAA1G,IACAuG,EAAArF,UAAA,MAAAgF,EAAAQ,EAAA1G,KAAA,SAAAoB,GACA,gBAAA8F,GACAvH,KAAAyB,GAAAwG,QAAAV,KAESR,EAAA1G,GAGT,QAAA6H,GAAA,EAAmBA,EAAAlB,EAAAhF,OAAyBkG,IAC5CtB,EAAArF,UAAA,MAAAgF,EAAAS,EAAAkB,KAAAvB,EAAAK,EAAAkB,IACAtB,EAAArF,UAAA,MAAAgF,EAAAS,EAAAkB,KAAA,SAAAzG,GACA,gBAAA8F,GACA,IAAApB,EAAAoB,GACA,SAAAE,WAAAhG,EAAA,oBAEAzB,MAAAyB,GAAA0G,OAAAZ,KAESP,EAAAkB,GAGT,QAAAE,GAAA,EAAmBA,EAAAnB,EAAAjF,OAAwBoG,IAC3CxB,EAAArF,UAAA,MAAAgF,EAAAU,EAAAmB,KAAAzB,EAAAM,EAAAmB,IACAxB,EAAArF,UAAA,MAAAgF,EAAAU,EAAAmB,KAAA,SAAA3G,GACA,gBAAA8F,GACAvH,KAAAyB,GAAA4G,OAAAd,KAESN,EAAAmB,GAGT,OAAAxB,MH+fM,SAAUhH,EAAQD,EAASO,GIxlBjC,QAAAoI,GAAA1G,GACAA,IACAA,MAEA5B,KAAAuI,MAAAC,EAAA7G,OAAAC,EAAA,aACA5B,KAAAyI,YAAAD,EAAA7G,OAAAC,EAAA,mBACA5B,KAAA0I,gBAAAF,EAAA7G,OAAAC,EAAA,qBACA5B,KAAA2I,SAAA,GAAAC,GACA5I,KAAA6I,OAAA,GAAAD,GACA5I,KAAA8I,UAAA,GAAAC,GACA/I,KAAAgJ,iBAAA,KAvBA,GAAAC,GAAA/I,EAAA,GACAsI,EAAAtI,EAAA,GACA0I,EAAA1I,EAAA,GAAA0I,SACAG,EAAA7I,EAAA,IAAA6I,WAuBAT,GAAA/G,UAAA2H,SAAA,EAOAZ,EAAAa,cACA,SAAAC,GACA,GAAAC,GAAAD,EAAAC,WACAC,EAAA,GAAAhB,IACAiB,KAAAH,EAAAG,KACAF,cAkCA,OAhCAD,GAAAI,YAAA,SAAAC,GACA,GAAAC,IACAC,WACAC,KAAAH,EAAApE,cACAwE,OAAAJ,EAAArE,iBAIA,OAAAqE,EAAAxE,SACAyE,EAAAzE,OAAAwE,EAAAxE,OACA,MAAAoE,IACAK,EAAAzE,OAAAuD,EAAA1E,SAAAuF,EAAAK,EAAAzE,SAGAyE,EAAAI,UACAF,KAAAH,EAAAvE,aACA2E,OAAAJ,EAAAtE,gBAGA,MAAAsE,EAAA9I,OACA+I,EAAA/I,KAAA8I,EAAA9I,OAIA2I,EAAAS,WAAAL,KAEAN,EAAAY,QAAAC,QAAA,SAAAC,GACA,GAAAC,GAAAf,EAAAgB,iBAAAF,EACA,OAAAC,GACAb,EAAAe,iBAAAH,EAAAC,KAGAb,GAaAhB,EAAA/G,UAAAwI,WACA,SAAAnI,GACA,GAAA+H,GAAAnB,EAAA7G,OAAAC,EAAA,aACAkI,EAAAtB,EAAA7G,OAAAC,EAAA,iBACAqD,EAAAuD,EAAA7G,OAAAC,EAAA,eACAjB,EAAA6H,EAAA7G,OAAAC,EAAA,YAEA5B,MAAA0I,iBACA1I,KAAAsK,iBAAAX,EAAAG,EAAA7E,EAAAtE,GAGA,MAAAsE,IACAA,EAAAoD,OAAApD,GACAjF,KAAA2I,SAAA4B,IAAAtF,IACAjF,KAAA2I,SAAA6B,IAAAvF,IAIA,MAAAtE,IACAA,EAAA0H,OAAA1H,GACAX,KAAA6I,OAAA0B,IAAA5J,IACAX,KAAA6I,OAAA2B,IAAA7J,IAIAX,KAAA8I,UAAA0B,KACAnF,cAAAsE,EAAAC,KACAxE,gBAAAuE,EAAAE,OACA3E,aAAA,MAAA4E,KAAAF,KACAzE,eAAA,MAAA2E,KAAAD,OACA5E,SACAtE,UAOA2H,EAAA/G,UAAA8I,iBACA,SAAAI,EAAAC,GACA,GAAAzF,GAAAwF,CACA,OAAAzK,KAAAyI,cACAxD,EAAAuD,EAAA1E,SAAA9D,KAAAyI,YAAAxD,IAGA,MAAAyF,GAGA1K,KAAAgJ,mBACAhJ,KAAAgJ,iBAAAlI,OAAA+E,OAAA,OAEA7F,KAAAgJ,iBAAAR,EAAAjE,YAAAU,IAAAyF,GACK1K,KAAAgJ,yBAGLhJ,MAAAgJ,iBAAAR,EAAAjE,YAAAU,IACA,IAAAnE,OAAA6J,KAAA3K,KAAAgJ,kBAAAhH,SACAhC,KAAAgJ,iBAAA,QAqBAV,EAAA/G,UAAAqJ,eACA,SAAAxB,EAAAqB,EAAAI,GACA,GAAAX,GAAAO,CAEA,UAAAA,EAAA,CACA,SAAArB,EAAAG,KACA,SAAAtH,OACA,gJAIAiI,GAAAd,EAAAG,KAEA,GAAAF,GAAArJ,KAAAyI,WAEA,OAAAY,IACAa,EAAA1B,EAAA1E,SAAAuF,EAAAa,GAIA,IAAAY,GAAA,GAAAlC,GACAmC,EAAA,GAAAnC,EAGA5I,MAAA8I,UAAAkC,gBAAA,SAAAvB,GACA,GAAAA,EAAAxE,SAAAiF,GAAA,MAAAT,EAAAvE,aAAA,CAEA,GAAA4E,GAAAV,EAAA6B,qBACArB,KAAAH,EAAAvE,aACA2E,OAAAJ,EAAAtE,gBAEA,OAAA2E,EAAA7E,SAEAwE,EAAAxE,OAAA6E,EAAA7E,OACA,MAAA4F,IACApB,EAAAxE,OAAAuD,EAAAlF,KAAAuH,EAAApB,EAAAxE,SAEA,MAAAoE,IACAI,EAAAxE,OAAAuD,EAAA1E,SAAAuF,EAAAI,EAAAxE,SAEAwE,EAAAvE,aAAA4E,EAAAF,KACAH,EAAAtE,eAAA2E,EAAAD,OACA,MAAAC,EAAAnJ,OACA8I,EAAA9I,KAAAmJ,EAAAnJ,OAKA,GAAAsE,GAAAwE,EAAAxE,MACA,OAAAA,GAAA6F,EAAAP,IAAAtF,IACA6F,EAAAN,IAAAvF,EAGA,IAAAtE,GAAA8I,EAAA9I,IACA,OAAAA,GAAAoK,EAAAR,IAAA5J,IACAoK,EAAAP,IAAA7J,IAGKX,MACLA,KAAA2I,SAAAmC,EACA9K,KAAA6I,OAAAkC,EAGA3B,EAAAY,QAAAC,QAAA,SAAAC,GACA,GAAAC,GAAAf,EAAAgB,iBAAAF,EACA,OAAAC,IACA,MAAAU,IACAX,EAAA1B,EAAAlF,KAAAuH,EAAAX,IAEA,MAAAb,IACAa,EAAA1B,EAAA1E,SAAAuF,EAAAa,IAEAlK,KAAAqK,iBAAAH,EAAAC,KAEKnK,OAcLsI,EAAA/G,UAAA+I,iBACA,SAAAY,EAAAC,EAAAC,EACAvJ,GACA,MAAAqJ,GAAA,QAAAA,IAAA,UAAAA,IACAA,EAAAtB,KAAA,GAAAsB,EAAArB,QAAA,IACAsB,GAAAC,GAAAvJ,MAIAqJ,GAAA,QAAAA,IAAA,UAAAA,IACAC,GAAA,QAAAA,IAAA,UAAAA,IACAD,EAAAtB,KAAA,GAAAsB,EAAArB,QAAA,GACAsB,EAAAvB,KAAA,GAAAuB,EAAAtB,QAAA,GACAuB,GAKA,SAAAnJ,OAAA,oBAAAoJ,KAAAC,WACA3B,UAAAuB,EACAjG,OAAAmG,EACAtB,SAAAqB,EACAxK,KAAAkB,MASAyG,EAAA/G,UAAAgK,mBACA,WAcA,OANAC,GACA/B,EACAgC,EACAC,EAVAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAMAC,EAAAlM,KAAA8I,UAAAqD,UACA9L,EAAA,EAAA+L,EAAAF,EAAAlK,OAA0C3B,EAAA+L,EAAS/L,IAAA,CAInD,GAHAoJ,EAAAyC,EAAA7L,GACAmL,EAAA,GAEA/B,EAAApE,gBAAAuG,EAEA,IADAD,EAAA,EACAlC,EAAApE,gBAAAuG,GACAJ,GAAA,IACAI,QAIA,IAAAvL,EAAA,GACA,IAAAmI,EAAA7C,oCAAA8D,EAAAyC,EAAA7L,EAAA,IACA,QAEAmL,IAAA,IAIAA,GAAAvC,EAAAoD,OAAA5C,EAAArE,gBACAuG,GACAA,EAAAlC,EAAArE,gBAEA,MAAAqE,EAAAxE,SACAyG,EAAA1L,KAAA2I,SAAA3E,QAAAyF,EAAAxE,QACAuG,GAAAvC,EAAAoD,OAAAX,EAAAM,GACAA,EAAAN,EAGAF,GAAAvC,EAAAoD,OAAA5C,EAAAvE,aAAA,EACA4G,GACAA,EAAArC,EAAAvE,aAAA,EAEAsG,GAAAvC,EAAAoD,OAAA5C,EAAAtE,eACA0G,GACAA,EAAApC,EAAAtE,eAEA,MAAAsE,EAAA9I,OACA8K,EAAAzL,KAAA6I,OAAA7E,QAAAyF,EAAA9I,MACA6K,GAAAvC,EAAAoD,OAAAZ,EAAAM,GACAA,EAAAN,IAIAQ,GAAAT,EAGA,MAAAS,IAGA3D,EAAA/G,UAAA+K,wBACA,SAAAC,EAAAC,GACA,MAAAD,GAAAE,IAAA,SAAAxH,GACA,IAAAjF,KAAAgJ,iBACA,WAEA,OAAAwD,IACAvH,EAAAuD,EAAA1E,SAAA0I,EAAAvH,GAEA,IAAAyH,GAAAlE,EAAAjE,YAAAU,EACA,OAAAnE,QAAAS,UAAAC,eAAAjB,KAAAP,KAAAgJ,iBAAA0D,GACA1M,KAAAgJ,iBAAA0D,GACA,MACK1M,OAMLsI,EAAA/G,UAAAoL,OACA,WACA,GAAAF,IACAG,QAAA5M,KAAAkJ,SACAc,QAAAhK,KAAA2I,SAAAwD,UACAU,MAAA7M,KAAA6I,OAAAsD,UACAD,SAAAlM,KAAAuL,qBAYA,OAVA,OAAAvL,KAAAuI,QACAkE,EAAAlD,KAAAvJ,KAAAuI,OAEA,MAAAvI,KAAAyI,cACAgE,EAAApD,WAAArJ,KAAAyI,aAEAzI,KAAAgJ,mBACAyD,EAAAK,eAAA9M,KAAAsM,wBAAAG,EAAAzC,QAAAyC,EAAApD,aAGAoD,GAMAnE,EAAA/G,UAAAiG,SACA,WACA,MAAA6D,MAAAC,UAAAtL,KAAA2M,WAGAhN,EAAA2I,sBJmnBM,SAAU1I,EAAQD,EAASO,GKl8BjC,QAAA6M,GAAAC,GACA,MAAAA,GAAA,EACA,IAAAA,GAAA,GACA,GAAAA,GAAA,GASA,QAAAC,GAAAD,GACA,GAAAE,GAAA,MAAAF,GACAG,EAAAH,GAAA,CACA,OAAAE,IACAC,EACAA,EAhDA,GAAAC,GAAAlN,EAAA,GAsDAP,GAAA0M,OAAA,SAAAW,GACA,GACAK,GADAC,EAAA,GAGAC,EAAAR,EAAAC,EAEA,IACAK,EAzCAG,GAyCAD,EACAA,KAhDA,EAiDAA,EAAA,IAGAF,GAjDA,IAmDAC,GAAAF,EAAAf,OAAAgB,SACGE,EAAA,EAEH,OAAAD,IAOA3N,EAAA8N,OAAA,SAAAjJ,EAAAkJ,EAAAC,GACA,GAGAC,GAAAP,EAHAQ,EAAArJ,EAAAxC,OACAiK,EAAA,EACA6B,EAAA,CAGA,IACA,GAAAJ,GAAAG,EACA,SAAA5L,OAAA,6CAIA,UADAoL,EAAAD,EAAAK,OAAAjJ,EAAAG,WAAA+I,OAEA,SAAAzL,OAAA,yBAAAuC,EAAAZ,OAAA8J,EAAA,GAGAE,MA7EA,GA6EAP,GACAA,GA3EAG,GA4EAvB,GAAAoB,GAAAS,EACAA,GAnFA,QAoFGF,EAEHD,GAAAI,MAAAd,EAAAhB,GACA0B,EAAAK,KAAAN,IL8gCM,SAAU9N,EAAQD,EAASO,GMxoCjC,QAAA0I,KACA5I,KAAAiO,UACAjO,KAAAkO,KAAApN,OAAA+E,OAAA,MAXA,GAAA2C,GAAAtI,EAAA,GACAqK,EAAAzJ,OAAAS,UAAAC,cAgBAoH,GAAAuF,UAAA,SAAAC,EAAAC,GAEA,OADAC,GAAA,GAAA1F,GACAvI,EAAA,EAAA+L,EAAAgC,EAAApM,OAAsC3B,EAAA+L,EAAS/L,IAC/CiO,EAAA9D,IAAA4D,EAAA/N,GAAAgO,EAEA,OAAAC,IASA1F,EAAArH,UAAAgN,KAAA,WACA,MAAAzN,QAAA0N,oBAAAxO,KAAAkO,MAAAlM,QAQA4G,EAAArH,UAAAiJ,IAAA,SAAAhG,EAAA6J,GACA,GAAAI,GAAAjG,EAAAjE,YAAAC,GACAkK,EAAAnE,EAAAhK,KAAAP,KAAAkO,KAAAO,GACAE,EAAA3O,KAAAiO,OAAAjM,MACA0M,KAAAL,GACArO,KAAAiO,OAAAW,KAAApK,GAEAkK,IACA1O,KAAAkO,KAAAO,GAAAE,IASA/F,EAAArH,UAAAgJ,IAAA,SAAA/F,GACA,GAAAiK,GAAAjG,EAAAjE,YAAAC,EACA,OAAA+F,GAAAhK,KAAAP,KAAAkO,KAAAO,IAQA7F,EAAArH,UAAAyC,QAAA,SAAAQ,GACA,GAAAiK,GAAAjG,EAAAjE,YAAAC,EACA,IAAA+F,EAAAhK,KAAAP,KAAAkO,KAAAO,GACA,MAAAzO,MAAAkO,KAAAO,EAEA,UAAAxM,OAAA,IAAAuC,EAAA,yBAQAoE,EAAArH,UAAAsN,GAAA,SAAAC,GACA,GAAAA,GAAA,GAAAA,EAAA9O,KAAAiO,OAAAjM,OACA,MAAAhC,MAAAiO,OAAAa,EAEA,UAAA7M,OAAA,yBAAA6M,IAQAlG,EAAArH,UAAA4K,QAAA,WACA,MAAAnM,MAAAiO,OAAA9J,SAGAxE,EAAAiJ,YN+pCM,SAAUhJ,EAAQD,EAASO,GAEjC,YOxuCA,SAAA6O,GAAuBjI,GACrB,MAC2B,gBAAlBA,GAAMkI,SAAiD,kBAAlBlI,GAAMkI,QAItD,QAAAC,GAAyBnI,GACvB,IAAKiI,EAAcjI,GACjB,KAAM,IAAIW,WACR,0EAGJ,QAAO,EAGT,QAAAyH,GACEvO,EACAwO,EACAC,GAEA,OAHA,KAAAD,MAAAlN,WACA,KAAAmN,UAEoB,gBAATzO,GACT,KAAM,IAAI8G,WAAU,kCAGtB,IACE0H,IAAgBlN,QACfA,MAAMV,UAAU8N,cAAcF,EAAY5N,WAE3C,KAAM,IAAIkG,WACR,gEAIJwH,GAAgBG,EAEhB,IAAME,GAAAF,EACJG,EAAAD,EAAAN,QACAQ,EAAAC,EAAAH,GAAA,YAGEI,EACwB,gBAAnBH,GAA8B,WAAM,MAAAA,IAAiBA,EAExDI,EAAmB,SACvBX,EACAlI,GAEA,KAAM9G,eAAgB2P,IACpB,MAAO,IAAKA,GAA4BX,EAASlI,EAG1B,KAArB/E,UAAUC,SACZ8E,EAAQkI,EACRA,EAAUlI,EAAMkI,QAGlB,IAAMY,GAAQ,GAAIT,EAiBlB,OAfArO,QAAO+O,eAAeD,EAAO9O,OAAOgP,eAAe9P,OAE/CiC,MAAM8N,mBACR9N,MAAM8N,kBAAkBH,EAAOD,GAGjC7O,OAAOkP,OAAOJ,EAAO9I,GAErB8I,EAAMjP,KAAOA,EAEbiP,EAAMZ,QACe,kBAAZA,GACHA,EAAQY,GACRZ,GAAWU,EAAWE,GAErBA,EAsDT,OAnDI9O,QAAO+O,eACT/O,OAAO+O,eAAeF,EAAaR,GAEnCQ,EAAYM,UAAYd,EAG1BrO,OAAOC,eAAe4O,EAAa,QACjC5B,MAAOpN,EACPM,YAAY,EACZD,cAAc,EACdkP,UAAU,IAGZP,EAAYQ,UAAY,SAASC,GAE/B,GADAnB,EAAgBmB,GAEY,gBAAnBA,GAAOpB,SACY,kBAAnBoB,GAAOpB,QAEd,KAAM,IAAIvH,WACR,0EAGFiI,GAC4B,gBAAnBU,GAAOpB,QACV,WAAM,MAAAoB,GAAOpB,SACboB,EAAOpB,OAEP,IAASqB,IAATD,EAAApB,QAASS,EAAAW,GAAA,YACjBtP,QAAOkP,OAAOL,EAAYpO,UAAW8O,IAGvCV,EAAYpO,UAAYT,OAAO+E,OAAOsJ,EAAY5N,WAChD+O,aACEvC,MAAO4B,EACP1O,YAAY,EACZD,cAAc,EACdkP,UAAU,GAEZ1I,UACEuG,MAAO,WACL,MAAO,OAET9M,YAAY,EACZD,cAAc,EACdkP,UAAU,KAIdpP,OAAOkP,OAAOL,EAAYpO,UAAWiO,GAE9BG,EP2mCT,GAAIF,GAAUzP,MAAQA,KAAKyP,QAAW,SAAU/N,EAAG6O,GAC/C,GAAIC,KACJ,KAAK,GAAI/O,KAAKC,GAAOZ,OAAOS,UAAUC,eAAejB,KAAKmB,EAAGD,IAAM8O,EAAEvM,QAAQvC,GAAK,IAC9E+O,EAAE/O,GAAKC,EAAED,GACb,IAAS,MAALC,GAAqD,kBAAjCZ,QAAO2P,sBAC3B,IAAK,GAAIpQ,GAAI,EAAGoB,EAAIX,OAAO2P,sBAAsB/O,GAAIrB,EAAIoB,EAAEO,OAAQ3B,IAASkQ,EAAEvM,QAAQvC,EAAEpB,IAAM,IAC1FmQ,EAAE/O,EAAEpB,IAAMqB,EAAED,EAAEpB,IACtB,OAAOmQ,GAEX1P,QAAOC,eAAepB,EAAS,cAAgBoO,OAAO,IOpuCtDpO,EAAAuP,ePm0CM,SAAUtP,EAAQD,EAASO,GAEjC,YQx2CA,SAAAwQ,GAAgCC,GAC9B,GAAIC,YACFC,QAAQC,MAAM,OAAQ,aAAcH,EAAM3B,SAC1C6B,QAAQF,MAAMA,GACdE,QAAQE,IACN,aAAaC,SAASC,OAASN,EAAMO,SAAQ,IAAIP,EAAMQ,WAAU,IAC/DR,EAAMS,aAAY,MAGlBT,EAAMU,UAAU,CAClB,GAAMC,GAA4BX,EAAMU,SAASE,OAC/C,SAACC,EAAQC,EAASxN,GAKhB,MAJAuN,IAAU,oBACVA,GAAU,mBACVA,GAAU,mBACVA,GAAU,MAGZ,IAEIE,EAAiCf,EAAMU,SAASE,OACpD,SAACC,EAAQC,EAASxN,GAKhB,MAJAuN,GAAO5C,KAAK3K,EAAQ,GACpBuN,EAAO5C,KAAK6C,EAAQ9Q,MACpB6Q,EAAO5C,KAAK6C,EAAQE,SAAW,iBAC/BH,EAAO5C,KAAKoC,SAASC,OAASQ,EAAQT,UAC/BQ,MAIXX,SAAQE,IAAG7K,MAAX2K,SACE,gBAAgBS,GAAmBnK,OAChCuK,IAIT,MAAOf,GRs0CT7P,OAAOC,eAAepB,EAAS,cAAgBoO,OAAO,KQj3CtD,WAEE,QAAA6D,GAAYH,GACVzR,KAAKgR,SAAWS,EAAQT,YAI5BrR,GAAA+Q,mBR+4CM,SAAU9Q,EAAQD,EAASO,GAEjC,YS35CA,SAAA2R,GACElB,GAEAE,QAAQE,IAAIJ,GT05Cd7P,OAAOC,eAAepB,EAAS,cAAgBoO,OAAO,IS75CtDpO,EAAAkS,oBTw6CM,SAAUjS,EAAQD,EAASO,GAEjC,YU71CA,SAAA4R,KACEjB,QAAQkB,KAAK,mCAGf,QAAAC,GAA2BC,GACzB,MAAoB,kBAANA,GAuBhB,QAAAC,GAAgBC,GAkBd,QAAAhC,GAAmBiC,GAkBjB,MAjBIC,GAAAC,cAAcF,EAAYZ,UAC5BY,EAAYZ,OAASa,EAAAE,qBAAqBH,EAAYZ,SAGpDa,EAAAC,cAAcF,EAAYI,UAC5BJ,EAAYI,OAASH,EAAAI,qBAAqBL,EAAYI,SAGxD1R,OAAOkP,OAAOI,EAAQgC,GAKlBhC,EAAOsC,kBACTzQ,MAAMyQ,gBAAkBtC,EAAOsC,iBAG1BtC,EAGT,QAAAuC,GACEhC,EACAiC,GAEAA,EAAcjC,EAAMkC,OAAUD,CAC9B,IAAME,GAAkCF,EAAY,GAE9CvB,EACJ0B,EAAY7R,IAAIyP,EAAMqC,YAClB5O,MAAM6O,KAAKF,EAAYG,UAAS/O,QAAE,OAElCgP,EACH9B,EAAS,IAAMA,EAAS,GAAG1Q,MAAS,uBAEjCyS,EAAOzC,EAAM3B,QAAU,QAAQmE,EAAW,KAAKxC,EAAM3B,OAE3D,IAA2B,IAAvB4D,EAAY5Q,OAAc,EACAqP,EAASgC,KAAK,SAAC5B,GAEzC,MADsBA,GAAQmB,YACTS,KACnB,SAAAC,GACE,MAAAA,GAAMpC,WAAa4B,EAAS5B,UAC5BoC,EAAMnC,aAAe2B,EAAS3B,YAC9BmC,EAAMlC,eAAiB0B,EAAS1B,mBAIpCwB,EAAcvB,EAASE,OACrB,SAACgC,EAAiC9B,GAAqB,MAClD8B,GAAMpM,OACNsK,EAAQmB,eAEZA,EAAY,MAKnB,GAAMY,GAAcZ,EACjBa,OAAO,SAAAnT,GAAK,MAAAA,GAAE2E,SACdwH,IAAI,SAAAiH,GAAK,MAAAA,GAAEzO,SACX3B,KAAK,KAQR,OANAqN,GAAM3B,QAAUoE,EAChBzC,EAAMgD,MAAQH,EACd7C,EAAMO,SAAW4B,EAAS5B,SAC1BP,EAAMQ,WAAa2B,EAAS3B,WAC5BR,EAAMS,aAAe0B,EAAS1B,aAC9BT,EAAMU,SAAWA,EACVV,EAGT,QAAAiD,GACEhB,GAGA,GAAMiB,GAAejB,EAAYkB,KAC/B,SAAAC,GAAc,OAACA,EAAW7C,SAAS8C,SAAS,gBAE9C,IAAIH,EACF,MAAUA,GAAc3C,SAAQ,IAAI2C,EAAa1C,WAAU,IACzD0C,EAAazC,aAyBnB,QAAAK,GACE9Q,EACAsT,EACAC,EACAC,GVu0CI,MAAOC,GAAUpU,SAAM,OAAQ,GAAQ,WU7wC3C,QAAAqU,GAAoB1T,EAAmB2T,GACrC,MAAO7C,GAAQ9Q,EAAM2T,EAAIjD,GV6wCnB,GAIIM,GAAS2C,EAAI1B,EAAavB,EAAUL,EAAUuD,EAAOC,EAJrDC,EAAQzU,IAKZ,OAAO0U,GAAY1U,KAAM,SAAUsP,GAC/B,OAAQA,EAAGqF,OACP,IAAK,GUn0CD,MARhB3C,GAAkBkC,IACpBvC,EAAUsC,EACVK,EAAKJ,IAELI,EAAKL,EACLE,EAAeD,IAGG,EAAMU,EAAW1T,MV60CrB,KAAK,GUv0CrB,GANM0R,EAActD,EAAAuF,OAEhBxD,EAAW8C,GAAgBpB,EAAY7R,IAAIoT,OAEzCtD,EAAW4C,EAAmBhB,IAE/BvB,EAASrP,OAiCZ,MAhCAqP,KAAc1Q,KAAIA,EAAEmU,SAAUR,EAAI1B,YAAWA,EAAEjB,QAAOA,EAAEX,SAAQA,IAChE+B,EAAYzE,IAAIgG,EAAIjD,GACdkD,EAAM9C,EAAQ9Q,EAAM2T,GAAIS,MAAM,SAAOpE,GAAkB,MAAAyD,GAAAK,MAAA,qBV40CnC,GAAInF,GAAI0F,EAAgBC,CACxB,OAAOP,GAAY1U,KAAM,SAAUkV,GAC/B,OAAQA,EAAGP,OACP,IAAK,GACD,MU/0C/BhE,GAAMkC,OAAP,MACFvD,EAAAqB,GAAc,EAAMiE,EAAWO,UAAUxE,IVi1CX,KAAK,GUj1CnCrB,EAAMuD,MAAQqC,EAAAL,OACRG,EAAiB3D,EACpB+D,UACA3I,IAAI,SAACgF,GAAqB,MAAAA,GAAQmB,cAClCrB,OACC,SACEtF,EACAsH,GACG,MAAAtH,GAAO9E,OAAOoM,QAGvB5C,EAAMkC,MAAQlC,EAAMkC,MAAM1L,OAAO6N,GACjCrE,EAAMqC,UAAYsB,EAClB3D,EAAMU,SAAWA,EAAS+D,UAEpBH,EAAa,GAAII,YAAW,SAChCC,SAAU3E,EAAMO,SAChBqE,OAAQ5E,EAAMQ,WACdqE,MAAO7E,EAAMS,aACbpC,QAAS2B,EAAM3B,QACf2B,MAAKA,IAEP8E,OAAOC,cAAcT,GV40CaC,EAAGP,MAAQ,CACf,KAAK,GUz0CrC,KAAMhE,WAEF,EAAC4D,EAaT,IAVID,IAAOjD,EAAS,GAAGyD,UACrBzD,EAASzC,MAAOjO,KAAIA,EAAEmU,SAAUR,EAAI1B,YAAWA,EAAEjB,QAAOA,EAAEX,SAAQA,QASxD/K,MADNuO,EAAMF,EAAGD,IACQ,CACrB,IAAKjE,EAAOuF,uBACV,KAAM,IAAIC,GAAAC,uBAAwB1C,YAAaxS,GAGjDkQ,SAAQkB,KACN,WAAWpR,EAAI,iDAGnB,SAAO6T,QAnMT,GAAMzB,GAA2B,GAAI+C,KAE/B1F,GACJoB,OAAQuE,EAAArF,gBACR8B,OAAQV,EACR6D,wBAAwB,EAgO1B,OA7N0B,gBAAfxD,IACThC,EAAUgC,GAgMU,mBAAXsD,UACTA,OAAOO,QAAU,SAAC5C,EAAKvQ,EAAK+G,EAAMqM,EAAKtF,GASrC,MARIA,KAAUA,EAAMU,WAClBV,EAAMuF,WAAY,EAClBtB,EAAWO,UAAUxE,GAClBwF,KAAKxD,EAAayD,KAAK,KAAMzF,IAC7BwF,KAAK/F,EAAOoB,OAAQ4E,KAAK,KAAMzF,IAC/BwF,KAAK/F,EAAOoC,OAAQ4D,KAAK,KAAMzF,MAG7B,GAGT8E,OAAOY,iBACL,qBACA,SAAC9F,GACCA,EAAE+F,gBACF,IAAM3F,GAAQJ,EAAEgG,MACZ5F,GAAMuF,WACVtB,EAAWO,UAAUxE,GAClBwF,KAAKxD,EAAayD,KAAK,KAAMzF,IAC7BwF,KAAK/F,EAAOoB,OAAQ4E,KAAK,KAAMzF,IAC/BwF,KAAK/F,EAAOoC,OAAQ4D,KAAK,KAAMzF,QAOtCc,QAAOA,EACPtB,UAASA,GVslCb,GAAIiE,GAAapU,MAAQA,KAAKoU,WAAc,SAAUoC,EAASC,EAAYC,EAAGpN,GAC1E,MAAO,KAAKoN,IAAMA,EAAIC,UAAU,SAAUC,EAASC,GAC/C,QAASC,GAAU/I,GAAS,IAAMgJ,EAAKzN,EAAUkC,KAAKuC,IAAW,MAAOwC,GAAKsG,EAAOtG,IACpF,QAASyG,GAASjJ,GAAS,IAAMgJ,EAAKzN,EAAiB,MAAEyE,IAAW,MAAOwC,GAAKsG,EAAOtG,IACvF,QAASwG,GAAK9K,GAAUA,EAAOgL,KAAOL,EAAQ3K,EAAO8B,OAAS,GAAI2I,GAAE,SAAUE,GAAWA,EAAQ3K,EAAO8B,SAAWoI,KAAKW,EAAWE,GACnID,GAAMzN,EAAYA,EAAUpD,MAAMsQ,EAASC,QAAmBjL,WAGlEkJ,EAAe1U,MAAQA,KAAK0U,aAAgB,SAAU8B,EAASU,GAG/D,QAASC,GAAKhW,GAAK,MAAO,UAAUoG,GAAK,MAAOwP,IAAM5V,EAAGoG,KACzD,QAASwP,GAAKK,GACV,GAAI1D,EAAG,KAAM,IAAIjM,WAAU,kCAC3B,MAAO4P,GAAG,IACN,GAAI3D,EAAI,EAAG4D,IAAM9G,EAAI8G,EAAU,EAARF,EAAG,GAAS,SAAWA,EAAG,GAAK,QAAU,YAAc5G,EAAIA,EAAEjQ,KAAK+W,EAAGF,EAAG,KAAKH,KAAM,MAAOzG,EAEjH,QADI8G,EAAI,EAAG9G,IAAG4G,GAAM,EAAG5G,EAAEzC,QACjBqJ,EAAG,IACP,IAAK,GAAG,IAAK,GAAG5G,EAAI4G,CAAI,MACxB,KAAK,GAAc,MAAXC,GAAE1C,SAAkB5G,MAAOqJ,EAAG,GAAIH,MAAM,EAChD,KAAK,GAAGI,EAAE1C,QAAS2C,EAAIF,EAAG,GAAIA,GAAM,EAAI,SACxC,KAAK,GAAGA,EAAKC,EAAEE,IAAIC,MAAOH,EAAEI,KAAKD,KAAO,SACxC,SACI,GAAMhH,EAAI6G,EAAEI,OAAMjH,EAAIA,EAAExO,OAAS,GAAKwO,EAAEA,EAAExO,OAAS,MAAkB,IAAVoV,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEC,EAAI,CAAG,UACjG,GAAc,IAAVD,EAAG,MAAc5G,GAAM4G,EAAG,GAAK5G,EAAE,IAAM4G,EAAG,GAAK5G,EAAE,IAAM,CAAE6G,EAAE1C,MAAQyC,EAAG,EAAI,OAC9E,GAAc,IAAVA,EAAG,IAAYC,EAAE1C,MAAQnE,EAAE,GAAI,CAAE6G,EAAE1C,MAAQnE,EAAE,GAAIA,EAAI4G,CAAI,OAC7D,GAAI5G,GAAK6G,EAAE1C,MAAQnE,EAAE,GAAI,CAAE6G,EAAE1C,MAAQnE,EAAE,GAAI6G,EAAEE,IAAI3I,KAAKwI,EAAK,OACvD5G,EAAE,IAAI6G,EAAEE,IAAIC,MAChBH,EAAEI,KAAKD,KAAO,UAEtBJ,EAAKF,EAAK3W,KAAKiW,EAASa,GAC1B,MAAO9G,GAAK6G,GAAM,EAAG7G,GAAI+G,EAAI,EAAK,QAAU5D,EAAIlD,EAAI,EACtD,GAAY,EAAR4G,EAAG,GAAQ,KAAMA,GAAG,EAAI,QAASrJ,MAAOqJ,EAAG,GAAKA,EAAG,OAAK,GAAQH,MAAM,GAvB9E,GAAsGvD,GAAG4D,EAAG9G,EAAGkH,EAA3GL,GAAM1C,MAAO,EAAGE,KAAM,WAAa,GAAW,EAAPrE,EAAE,GAAQ,KAAMA,GAAE,EAAI,OAAOA,GAAE,IAAOiH,QAAUF,OAC3F,OAAOG,IAAMlM,KAAM2L,EAAK,GAAIQ,MAASR,EAAK,GAAIS,OAAUT,EAAK,IAAwB,kBAAXU,UAA0BH,EAAEG,OAAOC,UAAY,WAAa,MAAO9X,QAAU0X,EAyB3J5W,QAAOC,eAAepB,EAAS,cAAgBoO,OAAO,GUj9CtD,IAAA6G,GAAA1U,EAAA,GACA6X,EAAA7X,EAAA,EAuWEP,GAAAuP,YAvWoB6I,EAAA7I,WACtB,IAAA6G,GAAA7V,EAAA,IACA8X,EAAA9X,EAAA,IACA0V,EAAA1V,EAAA,IACAmS,EAAAnS,EAAA,GAoWEP,GAAA4S,qBAjWAF,EAAAE,qBAkWA5S,EAAA8S,qBAjWAJ,EAAAI,oBA8VU9S,GAAAsY,QAAA/F,CAXZ,IAAMgG,IACJxH,gBAAeqF,EAAArF,gBAcf/Q,GAAAuY,WAXF,IAAMC,IACJtG,iBAAgBmG,EAAAnG,iBAWhBlS,GAAAwY,YV4zCI,SAAUvY,EAAQD,EAASO,GWxqDjC,GAAA4F,GAAAC,EAAAC,GAAA,SAAAvG,EAAAC,GACA,YAKAqG,IAAA7F,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAA4F,EAAA,MAAAG,MAAAD,EAAA,kBAAAF,KAAAI,MAAAvG,EAAAoG,GAAAD,KAAAlG,EAAAD,QAAAqG,IAMChG,EAAA,SAAAoY,EAAAC,EAAAC,GA8BD,QAAAC,GAAAC,EAAAC,GACA,GAAAC,KAWA,QATAF,EAAAC,GAAAxO,QAAA,SAAApD,GACA,OAAA8R,KAAA9R,GACAA,EAAArF,eAAAmX,KACAD,EAAAC,GAAA9R,EAAA8R,GAGA,OAAAD,KAGAA,EAGA,QAAAE,GAAAC,GACA,MAAAA,GAAAlF,OAAAkF,EAAA,mBAGA,QAAAC,GAAAC,EAAAtF,GACA,wBAAAA,GACAsF,EAAAtF,UAEAsF,EApDA,GAAAC,IACAvF,OAAA,SAAAwF,GAEA,YAAAA,EAAAC,cAAA,IAAAlV,QAAA,kBACA,KAAAiV,EAAAC,cAAA,IAAAlV,QAAA,wBACA,KAAAiV,EAAAC,cAAA,IAAAlV,QAAA,qBACA,KAAAiV,EAAAC,cAAA,IAAAlV,QAAA,qBAEAmV,gBAGAC,EAAA,WACA,IAEA,SAAAnX,OACS,MAAA4W,GACT,MAAAA,IAuCA,QAOA3X,IAAA,SAAAmY,GACA,GAAAR,GAAAO,GACA,OAAAR,GAAAC,GAAA7Y,KAAAmV,UAAA0D,EAAAQ,GAAArZ,KAAAsZ,qBAAAD,IAUAE,QAAA,SAAAF,GACAA,EAAAd,EAAAS,EAAAK,EACA,IAAAR,GAAAO,GAEA,OAAAN,GADAF,EAAAC,GAAAT,EAAAoB,MAAAX,GAAAR,EAAAoB,UAAAJ,GACAA,EAAA5F,SAUA0B,UAAA,SAAAxE,EAAA0I,GACAA,EAAAd,EAAAS,EAAAK,EACA,IAAAK,GAAA,GAAApB,GAAAe,EACA,WAAA1C,SAAA,SAAAC,GACA,GAAAmC,GAAAD,EAAAV,EAAAoB,MAAA7I,GAAA0I,EAAA5F,OACAmD,GAAAD,QAAAgD,IAAAZ,EAAAtM,IAAA,SAAAmN,GACA,UAAAjD,SAAA,SAAAC,GACA,QAAAiD,KACAjD,EAAAgD,GAGAF,EAAAI,SAAAF,GAAAzD,KAAAS,EAAAiD,GAAA,MAAAA,UAGazD,KAAApW,QASbsZ,qBAAA,SAAAD,GACAA,EAAAd,EAAAS,EAAAK,EACA,IAAAzG,GAAAyF,EAAAoB,UAAAJ,EAIA,OAHA,kBAAAA,GAAA5F,SACAb,IAAAa,OAAA4F,EAAA5F,SAEAkD,QAAAC,QAAAhE,IAYAmH,WAAA,SAAAzF,EAAA0F,EAAAC,EAAAzD,GACA,qBAAAlC,GACA,SAAArS,OAAA,wCACa,sBAAAqS,GAAA4F,uBAEb,MAAA5F,EAGA,IAAA6F,GAAA,WACA,IAEA,MADAna,MAAAkB,MAAAiV,KAAA6D,EAAAC,GAAA,MAAAA,GACA3F,EAAApO,MAAAsQ,GAAAxW,KAAA+B,WACiB,MAAAwO,GAIjB,KAHAqI,GAAArI,IACAvQ,KAAAmV,UAAA5E,GAAA4F,KAAA6D,EAAAC,GAAA,MAAAA,GAEA1J,IAEa6F,KAAApW,KAGb,OAFAma,GAAAD,uBAAA5F,EAEA6F,GASAC,aAAA,SAAA9F,GACA,qBAAAA,GACA,SAAArS,OAAA,2CACa,yBAAAqS,GAAA4F,uBACb5F,EAAA4F,uBAGA5F,GAYA9C,OAAA,SAAAuH,EAAAlW,EAAAwX,EAAAC,GACA,UAAA3D,SAAA,SAAAC,EAAAC,GACA,GAAA0D,GAAA,GAAAC,eAeA,IAdAD,EAAAvE,QAAAa,EACA0D,EAAAE,mBAAA,WACA,IAAAF,EAAAG,aACAH,EAAAI,QAAA,KAAAJ,EAAAI,OAAA,IACA/D,EAAA2D,EAAAK,cAEA/D,EAAA,GAAA5U,OAAA,WAAAY,EAAA,wBAAA0X,EAAAI,WAIAJ,EAAAM,KAAA,OAAAhY,GAGA0X,EAAAO,iBAAA,mCACAR,GAAA,gBAAAA,GAAAS,QAAA,CACA,GAAAA,GAAAT,EAAAS,OACA,QAAAC,KAAAD,GACAA,EAAAvZ,eAAAwZ,IACAT,EAAAO,iBAAAE,EAAAD,EAAAC,IAKA,GAAAC,IAAqCtH,MAAAoF,OACrC9S,KAAAoU,GAAA,OAAAA,IACAY,EAAAjM,QAAAqL,GAGAE,EAAAW,KAAA7P,KAAAC,UAAA2P,WXsrDM,SAAUrb,EAAQD,EAASO,GYp5DjC,GAAA4F,GAAAC,EAAAC,GAAA,SAAAvG,EAAAC,GACA,YAKAqG,IAAA7F,EAAA,IAAA4F,EAAA,MAAAG,MAAAD,EAAA,kBAAAF,KAAAI,MAAAvG,EAAAoG,GAAAD,KAAAlG,EAAAD,QAAAqG,IAMChG,EAAA,SAAA4G,GACD,YAEA,IAAAuU,GAAA,gBACAC,EAAA,kCACAC,EAAA,8BAEA,QAOA7B,MAAA,SAAA7I,GACA,YAAAA,EAAA2K,gBAAA,KAAA3K,EAAA,mBACA,MAAA3Q,MAAAub,WAAA5K,EACa,IAAAA,EAAAgD,OAAAhD,EAAAgD,MAAAvR,MAAAgZ,GACb,MAAApb,MAAAwb,YAAA7K,EACa,IAAAA,EAAAgD,MACb,MAAA3T,MAAAyb,gBAAA9K,EAEA,UAAA1O,OAAA,oCAKAyZ,gBAAA,SAAAC,GAEA,QAAAA,EAAA3X,QAAA,KACA,OAAA2X,EAGA,IAAAC,GAAA,iCACA1Y,EAAA0Y,EAAAC,KAAAF,EAAA9X,QAAA,cACA,QAAAX,EAAA,GAAAA,EAAA,QAAA+C,GAAA/C,EAAA,QAAA+C,KAGAuV,YAAA,SAAA7K,GAKA,MAJAA,GAAAgD,MAAAxQ,MAAA,MAAAsQ,OAAA,SAAA7J,GACA,QAAAA,EAAAxH,MAAAgZ,IACapb,MAEbyM,IAAA,SAAA7C,GACAA,EAAA5F,QAAA,eAEA4F,IAAA/F,QAAA,qBAAAA,QAAA,qCAEA,IAAAiY,GAAAlS,EAAA/F,QAAA,WAAAA,QAAA,oBAAAV,MAAA,OAAAgB,MAAA,GACA4X,EAAA/b,KAAA0b,gBAAAI,EAAAtE,OACA0B,EAAA4C,EAAAxY,KAAA,UAAA2C,GACAiL,GAAA,sBAAAlN,QAAA+X,EAAA,WAAA9V,GAAA8V,EAAA,EAEA,WAAAnV,IACAsS,eACAhI,WACAC,WAAA4K,EAAA,GACA3K,aAAA2K,EAAA,GACA9W,OAAA2E,KAEa5J,OAGbyb,gBAAA,SAAA9K,GAKA,MAJAA,GAAAgD,MAAAxQ,MAAA,MAAAsQ,OAAA,SAAA7J,GACA,OAAAA,EAAAxH,MAAAiZ,IACarb,MAEbyM,IAAA,SAAA7C,GAMA,GAJAA,EAAA5F,QAAA,gBACA4F,IAAA/F,QAAA,8DAGA,IAAA+F,EAAA5F,QAAA,WAAA4F,EAAA5F,QAAA,KAEA,UAAA4C,IACAsS,aAAAtP,GAGA,IAAAkS,GAAAlS,EAAAzG,MAAA,KACA4Y,EAAA/b,KAAA0b,gBAAAI,EAAAtE,OACA0B,EAAA4C,EAAAxY,KAAA,UAAA2C,EAEA,WAAAW,IACAsS,eACAhI,SAAA6K,EAAA,GACA5K,WAAA4K,EAAA,GACA3K,aAAA2K,EAAA,GACA9W,OAAA2E,KAGa5J,OAGbub,WAAA,SAAAhL,GACA,OAAAA,EAAA+K,YAAA/K,EAAAvB,QAAAhL,QAAA,UACAuM,EAAAvB,QAAA7L,MAAA,MAAAnB,OAAAuO,EAAA+K,WAAAnY,MAAA,MAAAnB,OACAhC,KAAAgc,YAAAzL,GACaA,EAAAoD,MAGb3T,KAAAic,aAAA1L,GAFAvQ,KAAAkc,aAAA3L,IAMAyL,YAAA,SAAAzL,GAKA,OAJA4L,GAAA,oCACAC,EAAA7L,EAAAvB,QAAA7L,MAAA,MACA8I,KAEA5L,EAAA,EAAA+L,EAAAgQ,EAAApa,OAA+C3B,EAAA+L,EAAS/L,GAAA,GACxD,GAAA+B,GAAA+Z,EAAAN,KAAAO,EAAA/b,GACA+B,IACA6J,EAAA2C,KAAA,GAAAhI,IACAsK,SAAA9O,EAAA,GACA+O,WAAA/O,EAAA,GACA6C,OAAAmX,EAAA/b,MAKA,MAAA4L,IAGAiQ,aAAA,SAAA3L,GAKA,OAJA4L,GAAA,6DACAC,EAAA7L,EAAA+K,WAAAnY,MAAA,MACA8I,KAEA5L,EAAA,EAAA+L,EAAAgQ,EAAApa,OAA+C3B,EAAA+L,EAAS/L,GAAA,GACxD,GAAA+B,GAAA+Z,EAAAN,KAAAO,EAAA/b,GACA+B,IACA6J,EAAA2C,KACA,GAAAhI,IACAsS,aAAA9W,EAAA,QAAA6D,GACAiL,SAAA9O,EAAA,GACA+O,WAAA/O,EAAA,GACA6C,OAAAmX,EAAA/b,MAMA,MAAA4L,IAIAgQ,aAAA,SAAAtL,GAKA,MAJAA,GAAAgD,MAAAxQ,MAAA,MAAAsQ,OAAA,SAAA7J,GACA,QAAAA,EAAAxH,MAAA+Y,KAAAvR,EAAAxH,MAAA,sBACapC,MAEbyM,IAAA,SAAA7C,GACA,GAMAyS,GANAP,EAAAlS,EAAAzG,MAAA,KACA4Y,EAAA/b,KAAA0b,gBAAAI,EAAAtE,OACA8E,EAAAR,EAAAhO,SAAA,GACAoL,EAAAoD,EACAzY,QAAA,uCACAA,QAAA,uBAAAoC,EAEAqW,GAAAla,MAAA,kBACAia,EAAAC,EAAAzY,QAAA,6BAEA,IAAAwD,OAAApB,KAAAoW,GAAA,8BAAAA,MACApW,GAAAoW,EAAAlZ,MAAA,IAEA,WAAAyD,IACAsS,eACA7R,OACA6J,SAAA6K,EAAA,GACA5K,WAAA4K,EAAA,GACA3K,aAAA2K,EAAA,GACA9W,OAAA2E,KAEa5J,WZi6DP,SAAUJ,EAAQD,EAASO,Ga5lEjC,GAAA4F,GAAAC,EAAAC,GAAA,SAAAvG,EAAAC,GACA,YAKAqG,IAAA7F,EAAA,IAAA4F,EAAA,MAAAG,MAAAD,EAAA,kBAAAF,KAAAI,MAAAvG,EAAAoG,GAAAD,KAAAlG,EAAAD,QAAAqG,IAMChG,EAAA,SAAA4G,GACD,OACA6S,UAAA,SAAAJ,GACA,GAAA1F,MACA4I,EAAA,EAEA,iBAAAlD,IAAA,gBAAAA,GAAAkD,eACAA,EAAAlD,EAAAkD,aAIA,KADA,GAAAC,GAAAza,UAAA0a,OACAD,GAAA7I,EAAA3R,OAAAua,GAAA,CAGA,OADAlV,GAAA,GAAAjD,OAAAoY,EAAA,UAAAxa,QACA3B,EAAA,EAA+BA,EAAAgH,EAAArF,SAAiB3B,EAChDgH,EAAAhH,GAAAmc,EAAA,UAAAnc,EAEA,iCAAAqc,KAAAF,EAAAhV,YACAmM,EAAA/E,KAAA,GAAAhI,IAA+CsS,aAAAyD,OAAAC,QAAA3W,GAAAoB,UAE/CsM,EAAA/E,KAAA,GAAAhI,IAA+CS,SAG/C,KACAmV,IAAAK,OACiB,MAAAtM,GACjB,OAGA,MAAAoD,QbymEM,SAAU/T,EAAQD,EAASO,GclpEjC,GAAA4F,GAAAC,EAAAC,GAAA,SAAAvG,EAAAC,GACA,YAKAqG,IAAA7F,EAAA,IAAAA,EAAA,IAAA4F,EAAA,MAAAG,MAAAD,EAAA,kBAAAF,KAAAI,MAAAvG,EAAAoG,GAAAD,KAAAlG,EAAAD,QAAAqG,IAMChG,EAAA,SAAA8c,EAAAlW,GACD,YAQA,SAAAmW,GAAAla,GACA,UAAA8T,SAAA,SAAAC,EAAAC,GACA,GAAA0D,GAAA,GAAAC,eACAD,GAAAM,KAAA,MAAAhY,GACA0X,EAAAvE,QAAAa,EACA0D,EAAAE,mBAAA,WACA,IAAAF,EAAAG,aACAH,EAAAI,QAAA,KAAAJ,EAAAI,OAAA,KACA,YAAA9X,EAAAwB,OAAA,MAAAkW,EAAAK,aACAhE,EAAA2D,EAAAK,cAEA/D,EAAA,GAAA5U,OAAA,gBAAAsY,EAAAI,OAAA,eAAA9X,MAIA0X,EAAAW,SAYA,QAAA8B,GAAAC,GACA,sBAAAxH,gBAAAyH,KACA,MAAAzH,QAAAyH,KAAAD,EAEA,UAAAhb,OAAA,kEAIA,QAAAkb,GAAAC,GACA,sBAAA/R,YAAAmO,MACA,MAAAnO,MAAAmO,MAAA4D,EAEA,UAAAnb,OAAA,iEAIA,QAAAob,GAAApY,EAAAkM,GAkBA,OAjBAmM,IAEA,2DAEA,uCAEA,wEAEA,mFAEA,8DAEAlB,EAAAnX,EAAA9B,MAAA,MAGAoa,EAAA,GACAC,EAAAC,KAAAC,IAAAvM,EAAA,IACA9Q,EAAA,EAAuBA,EAAAmd,IAAcnd,EAAA,CAErC,GAAAuJ,GAAAwS,EAAAjL,EAAA9Q,EAAA,GACAsd,EAAA/T,EAAA5F,QAAA,KAKA,IAJA2Z,GAAA,IACA/T,IAAAvF,OAAA,EAAAsZ,IAGA/T,EAAA,CACA2T,EAAA3T,EAAA2T,CAEA,QADAnR,GAAAkR,EAAAtb,OACAiC,EAAA,EAAmCA,EAAAmI,EAAanI,IAAA,CAChD,GAAAzD,GAAA8c,EAAArZ,GAAA4X,KAAA0B,EACA,IAAA/c,KAAA,GACA,MAAAA,GAAA,MAQA,QAAAod,KACA,qBAAA9c,QAAAC,gBAAA,kBAAAD,QAAA+E,OACA,SAAA5D,OAAA,mDAIA,QAAA4b,GAAA5E,GACA,mBAAAA,GACA,SAAAxR,WAAA,oCACS,oBAAAwR,GAAA/H,SACT,SAAAzJ,WAAA,kCACS,oBAAAwR,GAAA9H,YACT8H,EAAA9H,WAAA,MACA8H,EAAA9H,WAAA,EACA,SAAA1J,WAAA,+CACS,oBAAAwR,GAAA7H,cACT6H,EAAA7H,aAAA,MACA6H,EAAA7H,aAAA,EACA,SAAA3J,WAAA,qDAEA,UAGA,QAAAqW,GAAA7Y,GAIA,IAHA,GACA8Y,GACAC,EAFAC,EAAA,8CAGAD,EAAAC,EAAApC,KAAA5W,IACA8Y,EAAAC,EAAA,EAEA,IAAAD,EACA,MAAAA,EAEA,UAAA9b,OAAA,8BAIA,QAAAic,GAAAjF,EAAAkF,EAAAhF,GACA,UAAAxC,SAAA,SAAAC,EAAAC,GACA,GAAAuH,GAAAD,EAAAlT,qBACArB,KAAAqP,EAAA9H,WACAtH,OAAAoP,EAAA7H,cAGA,IAAAgN,EAAAnZ,OAAA,CAEA,GAAAoZ,GAAAF,EAAA/T,iBAAAgU,EAAAnZ,OACAoZ,KACAlF,EAAAiF,EAAAnZ,QAAAoZ,GAGAzH,EAEA,GAAAhQ,IACAsS,aAAAkF,EAAAzd,MAAAsY,EAAAC,aACA7R,KAAA4R,EAAA5R,KACA6J,SAAAkN,EAAAnZ,OACAkM,WAAAiN,EAAAxU,KACAwH,aAAAgN,EAAAvU,cAGAgN,GAAA,GAAA5U,OAAA,wEAcA,eAAAqW,GAAAe,GACA,KAAArZ,eAAAsY,IACA,UAAAA,GAAAe,EAEAA,SAEArZ,KAAAmZ,YAAAE,EAAAF,gBACAnZ,KAAAse,uBAAAjF,EAAAiF,2BAEAte,KAAAue,KAAAlF,EAAAkF,MAAAxB,EAEA/c,KAAAgd,MAAA3D,EAAA6D,MAAAF,EAEAhd,KAAAwe,KAAA,SAAAxN,GACA,UAAA2F,SAAA,SAAAC,EAAAC,GACA,GAAA4H,GAAA,UAAAzN,EAAA3M,OAAA,IACA,IAAArE,KAAAmZ,YAAAnI,GACA4F,EAAA5W,KAAAmZ,YAAAnI,QACiB,IAAAqI,EAAAqF,UAAAD,EACjB5H,EAAA,GAAA5U,OAAA,qDAEA,IAAAwc,EAAA,CAGA,GAAAE,GACA,+CACAvc,EAAA4O,EAAA5O,MAAAuc,EACA,IAAAvc,EAAA,CACA,GAAAwc,GAAAxc,EAAA,GAAAJ,OACA6c,EAAA7N,EAAA3M,OAAAua,GACA3Z,EAAAjF,KAAAgd,MAAA6B,EACA7e,MAAAmZ,YAAAnI,GAAA/L,EACA2R,EAAA3R,OAEA4R,GAAA,GAAA5U,OAAA,8DAEqB,CACrB,GAAA6c,GAAA9e,KAAAue,KAAAvN,GAA8D+N,OAAA,OAE9D/e,MAAAmZ,YAAAnI,GAAA8N,EACAA,EAAA3I,KAAAS,EAAAC,KAGaT,KAAApW,QAWbA,KAAAgf,sBAAA,SAAAC,EAAAC,GACA,UAAAvI,SAAA,SAAAC,EAAAC,GACA,GAAA7W,KAAAse,uBAAAW,GACArI,EAAA5W,KAAAse,uBAAAW,QACiB,CACjB,GAAAE,GAAA,GAAAxI,SAAA,SAAAC,EAAAC,GACA,MAAA7W,MAAAwe,KAAAS,GAAA9I,KAAA,SAAAiJ,GACA,gBAAAA,KACAA,EAAAjC,EAAAiC,EAAAvb,QAAA,WAA6F,UAE7F,KAAAub,EAAA/V,aACA+V,EAAA/V,WAAA6V,GAGAtI,EAAA,GAAAkG,GAAAuC,kBAAAD,KACyBvI,IACJT,KAAApW,MACrBA,MAAAse,uBAAAW,GAAAE,EACAvI,EAAAuI,KAEa/I,KAAApW,QAUbA,KAAA8Z,SAAA,SAAAb,GACA,UAAAtC,SAAA,SAAAC,EAAAC,GACA7W,KAAAsf,kBAAArG,GAAA9C,KAAA,SAAAoJ,GACA,QAAAC,KACA5I,EAAA2I,GAGAvf,KAAAyf,iBAAAF,GACApJ,KAAAS,EAAA4I,GACA,MAAAA,IACiBpJ,KAAApW,MAAA6W,IACJT,KAAApW,QASbA,KAAAyf,iBAAA,SAAAxG,GACA,UAAAtC,SAAA,SAAAC,EAAAC,GACAgH,EAAA5E,GACAjZ,KAAAwe,KAAAvF,EAAA/H,UAAAiF,KAAA,SAAAlR,GACA,GAAAkM,GAAA8H,EAAA9H,WACAC,EAAA6H,EAAA7H,aACAsO,EAAArC,EAAApY,EAAAkM,EAGAyF,GADA8I,EACA,GAAA9Y,IACAsS,aAAAwG,EACArY,KAAA4R,EAAA5R,KACA6J,SAAA+H,EAAA/H,SACAC,aACAC,iBAGA6H,IAEiBpC,GAAA,MAAAA,IACJT,KAAApW,QASbA,KAAAsf,kBAAA,SAAArG,GACA,UAAAtC,SAAA,SAAAC,EAAAC,GACA+G,IACAC,EAAA5E,EAEA,IAAAE,GAAAnZ,KAAAmZ,YACAjI,EAAA+H,EAAA/H,QACAlR,MAAAwe,KAAAtN,GAAAiF,KAAA,SAAAlR,GACA,GAAAga,GAAAnB,EAAA7Y,GACAwZ,EAAA,UAAAQ,EAAA5a,OAAA,KACA6a,EAAAhO,EAAAxK,UAAA,EAAAwK,EAAAhN,YAAA,OAMA,OAJA,MAAA+a,EAAA,IAAAR,GAAA,sBAAA/B,KAAAuC,KACAA,EAAAC,EAAAD,GAGAjf,KAAAgf,sBAAAC,EAAAC,GACA/I,KAAA,SAAAgI,GACA,MAAAD,GAAAjF,EAAAkF,EAAAhF,GACAhD,KAAAS,GAAA,iBACAA,EAAAqC,QAGiB7C,KAAApW,MAAA6W,GAAA,MAAAA,IACJT,KAAApW,Yd+pEP,SAAUJ,EAAQD,EAASO,Ge1+EjCP,EAAA2I,mBAAApI,EAAA,GAAAoI,mBACA3I,EAAA0f,kBAAAnf,EAAA,IAAAmf,kBACA1f,EAAAggB,WAAAzf,EAAA,IAAAyf,Yfs/EM,SAAU/f,EAAQD,GgBt/ExB,GAAAigB,GAAA,mEAAAzc,MAAA,GAKAxD,GAAA0M,OAAA,SAAAwT,GACA,MAAAA,KAAAD,EAAA5d,OACA,MAAA4d,GAAAC,EAEA,UAAApY,WAAA,6BAAAoY,IAOAlgB,EAAA8N,OAAA,SAAAqS,GAiBA,MAhBA,KAgBAA,MAfA,GAgBAA,EAjBA,GAGA,IAkBAA,MAjBA,IAkBAA,EAnBA,GASA,GANA,IAoBAA,MAnBA,GAoBAA,EArBA,GAOA,GAJA,IAsBAA,EACA,GAtBA,IA0BAA,EACA,IAIA,IhBqgFM,SAAUlgB,EAAQD,EAASO,GiBzjFjC,QAAA6f,GAAAlb,EAAAC,GAEA,GAAAkb,GAAAnb,EAAAQ,cACA4a,EAAAnb,EAAAO,cACA6a,EAAArb,EAAAO,gBACA+a,EAAArb,EAAAM,eACA,OAAA6a,GAAAD,GAAAC,GAAAD,GAAAG,GAAAD,GACA1X,EAAA7C,oCAAAd,EAAAC,IAAA,EAQA,QAAAiE,KACA/I,KAAAiO,UACAjO,KAAAogB,SAAA,EAEApgB,KAAAqgB,OAAgBhb,eAAA,EAAAD,gBAAA,GAzBhB,GAAAoD,GAAAtI,EAAA,EAkCA6I,GAAAxH,UAAAyJ,gBACA,SAAAsV,EAAAC,GACAvgB,KAAAiO,OAAAhE,QAAAqW,EAAAC,IAQAxX,EAAAxH,UAAAiJ,IAAA,SAAAgW,GACAT,EAAA/f,KAAAqgB,MAAAG,IACAxgB,KAAAqgB,MAAAG,EACAxgB,KAAAiO,OAAAW,KAAA4R,KAEAxgB,KAAAogB,SAAA,EACApgB,KAAAiO,OAAAW,KAAA4R,KAaAzX,EAAAxH,UAAA4K,QAAA,WAKA,MAJAnM,MAAAogB,UACApgB,KAAAiO,OAAAwS,KAAAjY,EAAA7C,qCACA3F,KAAAogB,SAAA,GAEApgB,KAAAiO,QAGAtO,EAAAoJ,ejB6kFM,SAAUnJ,EAAQD,EAASO,GkB9oFjC,QAAAmf,GAAAqB,GACA,GAAAC,GAAAD,CAKA,OAJA,gBAAAA,KACAC,EAAAtV,KAAAmO,MAAAkH,EAAA7c,QAAA,WAAsD,MAGtD,MAAA8c,EAAAC,SACA,GAAAC,GAAAF,GACA,GAAAG,GAAAH,GAoQA,QAAAG,GAAAJ,GACA,GAAAC,GAAAD,CACA,iBAAAA,KACAC,EAAAtV,KAAAmO,MAAAkH,EAAA7c,QAAA,WAAsD,KAGtD,IAAA+I,GAAApE,EAAA7G,OAAAgf,EAAA,WACA3W,EAAAxB,EAAA7G,OAAAgf,EAAA,WAGA9T,EAAArE,EAAA7G,OAAAgf,EAAA,YACAtX,EAAAb,EAAA7G,OAAAgf,EAAA,mBACA7T,EAAAtE,EAAA7G,OAAAgf,EAAA,uBACAzU,EAAA1D,EAAA7G,OAAAgf,EAAA,YACApX,EAAAf,EAAA7G,OAAAgf,EAAA,YAIA,IAAA/T,GAAA5M,KAAAkJ,SACA,SAAAjH,OAAA,wBAAA2K,EAGA5C,KACAyC,IAAApE,QAIAoE,IAAAjE,EAAA1F,WAKA2J,IAAA,SAAAxH,GACA,MAAAoE,IAAAb,EAAAvF,WAAAoG,IAAAb,EAAAvF,WAAAgC,GACAuD,EAAA1E,SAAAuF,EAAApE,GACAA,IAOAjF,KAAA6I,OAAAD,EAAAuF,UAAAtB,EAAAJ,IAAApE,SAAA,GACArI,KAAA2I,SAAAC,EAAAuF,UAAAnE,GAAA,GAEAhK,KAAAqJ,aACArJ,KAAA8M,iBACA9M,KAAA8I,UAAAoD,EACAlM,KAAAuJ,OA8EA,QAAAwX,KACA/gB,KAAAqF,cAAA,EACArF,KAAAoF,gBAAA,EACApF,KAAAiF,OAAA,KACAjF,KAAAkF,aAAA,KACAlF,KAAAmF,eAAA,KACAnF,KAAAW,KAAA,KAyZA,QAAAkgB,GAAAH,GACA,GAAAC,GAAAD,CACA,iBAAAA,KACAC,EAAAtV,KAAAmO,MAAAkH,EAAA7c,QAAA,WAAsD,KAGtD,IAAA+I,GAAApE,EAAA7G,OAAAgf,EAAA,WACAC,EAAApY,EAAA7G,OAAAgf,EAAA,WAEA,IAAA/T,GAAA5M,KAAAkJ,SACA,SAAAjH,OAAA,wBAAA2K,EAGA5M,MAAA2I,SAAA,GAAAC,GACA5I,KAAA6I,OAAA,GAAAD,EAEA,IAAAoY,IACApX,MAAA,EACAC,OAAA,EAEA7J,MAAAihB,UAAAL,EAAAnU,IAAA,SAAA/K,GACA,GAAAA,EAAAmB,IAGA,SAAAZ,OAAA,qDAEA,IAAAif,GAAA1Y,EAAA7G,OAAAD,EAAA,UACAyf,EAAA3Y,EAAA7G,OAAAuf,EAAA,QACAE,EAAA5Y,EAAA7G,OAAAuf,EAAA,SAEA,IAAAC,EAAAH,EAAApX,MACAuX,IAAAH,EAAApX,MAAAwX,EAAAJ,EAAAnX,OACA,SAAA5H,OAAA,uDAIA,OAFA+e,GAAAE,GAGAG,iBAGAhc,cAAA8b,EAAA,EACA/b,gBAAAgc,EAAA,GAEAE,SAAA,GAAAjC,GAAA7W,EAAA7G,OAAAD,EAAA,WA11BA,GAAA8G,GAAAtI,EAAA,GACAqhB,EAAArhB,EAAA,IACA0I,EAAA1I,EAAA,GAAA0I,SACAK,EAAA/I,EAAA,GACAshB,EAAAthB,EAAA,IAAAshB,SAaAnC,GAAAlW,cAAA,SAAAuX,GACA,MAAAI,GAAA3X,cAAAuX,IAMArB,EAAA9d,UAAA2H,SAAA,EAgCAmW,EAAA9d,UAAAkgB,oBAAA,KACA3gB,OAAAC,eAAAse,EAAA9d,UAAA,sBACAL,IAAA,WAKA,MAJAlB,MAAAyhB,qBACAzhB,KAAA0hB,eAAA1hB,KAAA8I,UAAA9I,KAAAqJ,YAGArJ,KAAAyhB,uBAIApC,EAAA9d,UAAAogB,mBAAA,KACA7gB,OAAAC,eAAAse,EAAA9d,UAAA,qBACAL,IAAA,WAKA,MAJAlB,MAAA2hB,oBACA3hB,KAAA0hB,eAAA1hB,KAAA8I,UAAA9I,KAAAqJ,YAGArJ,KAAA2hB,sBAIAtC,EAAA9d,UAAAqgB,wBACA,SAAApd,EAAAP,GACA,GAAAxD,GAAA+D,EAAAZ,OAAAK,EACA,aAAAxD,GAAmB,MAAAA,GAQnB4e,EAAA9d,UAAAmgB,eACA,SAAAld,EAAAgI,GACA,SAAAvK,OAAA,6CAGAod,EAAAwC,gBAAA,EACAxC,EAAAyC,eAAA,EAEAzC,EAAA0C,qBAAA,EACA1C,EAAA2C,kBAAA,EAkBA3C,EAAA9d,UAAAiI,YACA,SAAA8W,EAAA2B,EAAAC,GACA,GAGAhW,GAHAyF,EAAAsQ,GAAA,KACAE,EAAAD,GAAA7C,EAAAwC,eAGA,QAAAM,GACA,IAAA9C,GAAAwC,gBACA3V,EAAAlM,KAAAoiB,kBACA,MACA,KAAA/C,GAAAyC,eACA5V,EAAAlM,KAAAqiB,iBACA,MACA,SACA,SAAApgB,OAAA,+BAGA,GAAAoH,GAAArJ,KAAAqJ,UACA6C,GAAAO,IAAA,SAAAhD,GACA,GAAAxE,GAAA,OAAAwE,EAAAxE,OAAA,KAAAjF,KAAA2I,SAAAkG,GAAApF,EAAAxE,OAIA,OAHA,OAAAA,GAAA,MAAAoE,IACApE,EAAAuD,EAAAlF,KAAA+F,EAAApE,KAGAA,SACAI,cAAAoE,EAAApE,cACAD,gBAAAqE,EAAArE,gBACAF,aAAAuE,EAAAvE,aACAC,eAAAsE,EAAAtE,eACAxE,KAAA,OAAA8I,EAAA9I,KAAA,KAAAX,KAAA6I,OAAAgG,GAAApF,EAAA9I,QAEKX,MAAAiK,QAAAqW,EAAA3O,IAsBL0N,EAAA9d,UAAA+gB,yBACA,SAAA1gB,GACA,GAAAgI,GAAApB,EAAA7G,OAAAC,EAAA,QAMA2gB,GACAtd,OAAAuD,EAAA7G,OAAAC,EAAA,UACAsD,aAAA0E,EACAzE,eAAAqD,EAAA7G,OAAAC,EAAA,YAMA,IAHA,MAAA5B,KAAAqJ,aACAkZ,EAAAtd,OAAAuD,EAAA1E,SAAA9D,KAAAqJ,WAAAkZ,EAAAtd,UAEAjF,KAAA2I,SAAA4B,IAAAgY,EAAAtd,QACA,QAEAsd,GAAAtd,OAAAjF,KAAA2I,SAAA3E,QAAAue,EAAAtd,OAEA,IAAAiH,MAEAjI,EAAAjE,KAAAwiB,aAAAD,EACAviB,KAAAqiB,kBACA,eACA,iBACA7Z,EAAA5D,2BACA2c,EAAAS,kBACA,IAAA/d,GAAA,GACA,GAAAwF,GAAAzJ,KAAAqiB,kBAAApe,EAEA,QAAAgC,KAAArE,EAAAiI,OAOA,IANA,GAAA3E,GAAAuE,EAAAvE,aAMAuE,KAAAvE,kBACAgH,EAAA0C,MACAhF,KAAApB,EAAA7G,OAAA8H,EAAA,sBACAI,OAAArB,EAAA7G,OAAA8H,EAAA,wBACAgZ,WAAAja,EAAA7G,OAAA8H,EAAA,8BAGAA,EAAAzJ,KAAAqiB,oBAAApe,OASA,KANA,GAAAkB,GAAAsE,EAAAtE,eAMAsE,GACAA,EAAAvE,eAAA0E,GACAH,EAAAtE,mBACA+G,EAAA0C,MACAhF,KAAApB,EAAA7G,OAAA8H,EAAA,sBACAI,OAAArB,EAAA7G,OAAA8H,EAAA,wBACAgZ,WAAAja,EAAA7G,OAAA8H,EAAA,8BAGAA,EAAAzJ,KAAAqiB,oBAAApe,GAKA,MAAAiI,IAGAvM,EAAA0f,oBAmFAyB,EAAAvf,UAAAT,OAAA+E,OAAAwZ,EAAA9d,WACAuf,EAAAvf,UAAA+f,SAAAjC,EASAyB,EAAA3X,cACA,SAAAuX,GACA,GAAAgC,GAAA5hB,OAAA+E,OAAAib,EAAAvf,WAEAsL,EAAA6V,EAAA7Z,OAAAD,EAAAuF,UAAAuS,EAAA7X,OAAAsD,WAAA,GACAnC,EAAA0Y,EAAA/Z,SAAAC,EAAAuF,UAAAuS,EAAA/X,SAAAwD,WAAA,EACAuW,GAAArZ,WAAAqX,EAAAjY,YACAia,EAAA5V,eAAA4T,EAAApU,wBAAAoW,EAAA/Z,SAAAwD,UACAuW,EAAArZ,YACAqZ,EAAAnZ,KAAAmX,EAAAnY,KAWA,QAJAoa,GAAAjC,EAAA5X,UAAAqD,UAAAhI,QACAye,EAAAF,EAAAjB,uBACAoB,EAAAH,EAAAf,sBAEAthB,EAAA,EAAA2B,EAAA2gB,EAAA3gB,OAAsD3B,EAAA2B,EAAY3B,IAAA,CAClE,GAAAyiB,GAAAH,EAAAtiB,GACA0iB,EAAA,GAAAhC,EACAgC,GAAA1d,cAAAyd,EAAAzd,cACA0d,EAAA3d,gBAAA0d,EAAA1d,gBAEA0d,EAAA7d,SACA8d,EAAA9d,OAAA+E,EAAAhG,QAAA8e,EAAA7d,QACA8d,EAAA7d,aAAA4d,EAAA5d,aACA6d,EAAA5d,eAAA2d,EAAA3d,eAEA2d,EAAAniB,OACAoiB,EAAApiB,KAAAkM,EAAA7I,QAAA8e,EAAAniB,OAGAkiB,EAAAjU,KAAAmU,IAGAH,EAAAhU,KAAAmU,GAKA,MAFAvB,GAAAkB,EAAAf,mBAAAnZ,EAAA5D,4BAEA8d,GAMA5B,EAAAvf,UAAA2H,SAAA,EAKApI,OAAAC,eAAA+f,EAAAvf,UAAA,WACAL,IAAA,WACA,MAAAlB,MAAA2I,SAAAwD,UAAAM,IAAA,SAAA/K,GACA,aAAA1B,KAAAqJ,WAAAb,EAAAlF,KAAAtD,KAAAqJ,WAAA3H,MACK1B,SAqBL8gB,EAAAvf,UAAAmgB,eACA,SAAAld,EAAAgI,GAeA,IAdA,GAYA/C,GAAAjD,EAAAwc,EAAAC,EAAAlV,EAZA1I,EAAA,EACAsG,EAAA,EACAG,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EACA/J,EAAAwC,EAAAxC,OACAiC,EAAA,EACAif,KACAC,KACAC,KACAT,KAGA1e,EAAAjC,GACA,SAAAwC,EAAAZ,OAAAK,GACAoB,IACApB,IACA0H,EAAA,MAEA,UAAAnH,EAAAZ,OAAAK,GACAA,QAEA,CASA,IARAwF,EAAA,GAAAsX,GACAtX,EAAApE,gBAOA4d,EAAAhf,EAAyBgf,EAAAjhB,IACzBhC,KAAA4hB,wBAAApd,EAAAye,GADuCA,KAQvC,GAHAzc,EAAAhC,EAAAL,MAAAF,EAAAgf,GAEAD,EAAAE,EAAA1c,GAEAvC,GAAAuC,EAAAxE,WACS,CAET,IADAghB,KACA/e,EAAAgf,GACAha,EAAAwE,OAAAjJ,EAAAP,EAAAkf,GACApV,EAAAoV,EAAApV,MACA9J,EAAAkf,EAAAnV,KACAgV,EAAApU,KAAAb,EAGA,QAAAiV,EAAAhhB,OACA,SAAAC,OAAA,yCAGA,QAAA+gB,EAAAhhB,OACA,SAAAC,OAAA,yCAGAihB,GAAA1c,GAAAwc,EAIAvZ,EAAArE,gBAAAuG,EAAAqX,EAAA,GACArX,EAAAlC,EAAArE,gBAEA4d,EAAAhhB,OAAA,IAEAyH,EAAAxE,OAAA+G,EAAAgX,EAAA,GACAhX,GAAAgX,EAAA,GAGAvZ,EAAAvE,aAAA4G,EAAAkX,EAAA,GACAlX,EAAArC,EAAAvE,aAEAuE,EAAAvE,cAAA,EAGAuE,EAAAtE,eAAA0G,EAAAmX,EAAA,GACAnX,EAAApC,EAAAtE,eAEA6d,EAAAhhB,OAAA,IAEAyH,EAAA9I,KAAAoL,EAAAiX,EAAA,GACAjX,GAAAiX,EAAA,KAIAL,EAAA/T,KAAAnF,GACA,gBAAAA,GAAAvE,cACAke,EAAAxU,KAAAnF,GAKA+X,EAAAmB,EAAAna,EAAAlD,qCACAtF,KAAAyhB,oBAAAkB,EAEAnB,EAAA4B,EAAA5a,EAAA5D,4BACA5E,KAAA2hB,mBAAAyB,GAOAtC,EAAAvf,UAAAihB,aACA,SAAAa,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,GAMA,GAAAL,EAAAE,IAAA,EACA,SAAA9b,WAAA,gDACA4b,EAAAE,GAEA,IAAAF,EAAAG,GAAA,EACA,SAAA/b,WAAA,kDACA4b,EAAAG,GAGA,OAAAjC,GAAAoC,OAAAN,EAAAC,EAAAG,EAAAC,IAOA5C,EAAAvf,UAAAqiB,mBACA,WACA,OAAA3f,GAAA,EAAuBA,EAAAjE,KAAAoiB,mBAAApgB,SAAwCiC,EAAA,CAC/D,GAAAwF,GAAAzJ,KAAAoiB,mBAAAne,EAMA,IAAAA,EAAA,EAAAjE,KAAAoiB,mBAAApgB,OAAA,CACA,GAAA6hB,GAAA7jB,KAAAoiB,mBAAAne,EAAA,EAEA,IAAAwF,EAAApE,gBAAAwe,EAAAxe,cAAA,CACAoE,EAAAqa,oBAAAD,EAAAze,gBAAA,CACA,WAKAqE,EAAAqa,oBAAAC,MAwBAjD,EAAAvf,UAAA0J,oBACA,SAAArJ,GACA,GAAA2gB,IACAld,cAAAmD,EAAA7G,OAAAC,EAAA,QACAwD,gBAAAoD,EAAA7G,OAAAC,EAAA,WAGAqC,EAAAjE,KAAAwiB,aACAD,EACAviB,KAAAoiB,mBACA,gBACA,kBACA5Z,EAAAlD,oCACAkD,EAAA7G,OAAAC,EAAA,OAAAyd,EAAA0C,sBAGA,IAAA9d,GAAA,GACA,GAAAwF,GAAAzJ,KAAAoiB,mBAAAne,EAEA,IAAAwF,EAAApE,gBAAAkd,EAAAld,cAAA,CACA,GAAAJ,GAAAuD,EAAA7G,OAAA8H,EAAA,cACA,QAAAxE,IACAA,EAAAjF,KAAA2I,SAAAkG,GAAA5J,GACA,MAAAjF,KAAAqJ,aACApE,EAAAuD,EAAAlF,KAAAtD,KAAAqJ,WAAApE,IAGA,IAAAtE,GAAA6H,EAAA7G,OAAA8H,EAAA,YAIA,OAHA,QAAA9I,IACAA,EAAAX,KAAA6I,OAAAgG,GAAAlO,KAGAsE,SACA2E,KAAApB,EAAA7G,OAAA8H,EAAA,qBACAI,OAAArB,EAAA7G,OAAA8H,EAAA,uBACA9I,SAKA,OACAsE,OAAA,KACA2E,KAAA,KACAC,OAAA,KACAlJ,KAAA,OAQAmgB,EAAAvf,UAAAyiB,wBACA,WACA,QAAAhkB,KAAA8M,iBAGA9M,KAAA8M,eAAA9K,QAAAhC,KAAA2I,SAAA4F,SACAvO,KAAA8M,eAAAuG,KAAA,SAAA4Q,GAA+C,aAAAA,MAQ/CnD,EAAAvf,UAAA6I,iBACA,SAAAgB,EAAA8Y,GACA,IAAAlkB,KAAA8M,eACA,WAOA,IAJA,MAAA9M,KAAAqJ,aACA+B,EAAA5C,EAAA1E,SAAA9D,KAAAqJ,WAAA+B,IAGApL,KAAA2I,SAAA4B,IAAAa,GACA,MAAApL,MAAA8M,eAAA9M,KAAA2I,SAAA3E,QAAAoH,GAGA,IAAAvI,EACA,UAAA7C,KAAAqJ,aACAxG,EAAA2F,EAAAtG,SAAAlC,KAAAqJ,aAAA,CAKA,GAAA8a,GAAA/Y,EAAAvH,QAAA,gBACA,YAAAhB,EAAAP,QACAtC,KAAA2I,SAAA4B,IAAA4Z,GACA,MAAAnkB,MAAA8M,eAAA9M,KAAA2I,SAAA3E,QAAAmgB,GAGA,MAAAthB,EAAAH,MAAA,KAAAG,EAAAH,OACA1C,KAAA2I,SAAA4B,IAAA,IAAAa,GACA,MAAApL,MAAA8M,eAAA9M,KAAA2I,SAAA3E,QAAA,IAAAoH,IAQA,GAAA8Y,EACA,WAGA,UAAAjiB,OAAA,IAAAmJ,EAAA,+BAuBA0V,EAAAvf,UAAA6iB,qBACA,SAAAxiB,GACA,GAAAqD,GAAAuD,EAAA7G,OAAAC,EAAA,SAIA,IAHA,MAAA5B,KAAAqJ,aACApE,EAAAuD,EAAA1E,SAAA9D,KAAAqJ,WAAApE,KAEAjF,KAAA2I,SAAA4B,IAAAtF,GACA,OACA2E,KAAA,KACAC,OAAA,KACA4Y,WAAA,KAGAxd,GAAAjF,KAAA2I,SAAA3E,QAAAiB,EAEA,IAAAsd,IACAtd,SACAC,aAAAsD,EAAA7G,OAAAC,EAAA,QACAuD,eAAAqD,EAAA7G,OAAAC,EAAA,WAGAqC,EAAAjE,KAAAwiB,aACAD,EACAviB,KAAAqiB,kBACA,eACA,iBACA7Z,EAAA5D,2BACA4D,EAAA7G,OAAAC,EAAA,OAAAyd,EAAA0C,sBAGA,IAAA9d,GAAA,GACA,GAAAwF,GAAAzJ,KAAAqiB,kBAAApe,EAEA,IAAAwF,EAAAxE,SAAAsd,EAAAtd,OACA,OACA2E,KAAApB,EAAA7G,OAAA8H,EAAA,sBACAI,OAAArB,EAAA7G,OAAA8H,EAAA,wBACAgZ,WAAAja,EAAA7G,OAAA8H,EAAA,6BAKA,OACAG,KAAA,KACAC,OAAA,KACA4Y,WAAA,OAIA9iB,EAAAmhB,yBA+FAD,EAAAtf,UAAAT,OAAA+E,OAAAwZ,EAAA9d,WACAsf,EAAAtf,UAAA+O,YAAA+O,EAKAwB,EAAAtf,UAAA2H,SAAA,EAKApI,OAAAC,eAAA8f,EAAAtf,UAAA,WACAL,IAAA,WAEA,OADA8I,MACA3J,EAAA,EAAmBA,EAAAL,KAAAihB,UAAAjf,OAA2B3B,IAC9C,OAAA6H,GAAA,EAAqBA,EAAAlI,KAAAihB,UAAA5gB,GAAAihB,SAAAtX,QAAAhI,OAA+CkG,IACpE8B,EAAA4E,KAAA5O,KAAAihB,UAAA5gB,GAAAihB,SAAAtX,QAAA9B,GAGA,OAAA8B,MAmBA6W,EAAAtf,UAAA0J,oBACA,SAAArJ,GACA,GAAA2gB,IACAld,cAAAmD,EAAA7G,OAAAC,EAAA,QACAwD,gBAAAoD,EAAA7G,OAAAC,EAAA,WAKAyiB,EAAA9C,EAAAoC,OAAApB,EAAAviB,KAAAihB,UACA,SAAAsB,EAAA+B,GACA,GAAAtf,GAAAud,EAAAld,cAAAif,EAAAjD,gBAAAhc,aACA,OAAAL,IAIAud,EAAAnd,gBACAkf,EAAAjD,gBAAAjc,kBAEAkf,EAAAtkB,KAAAihB,UAAAoD,EAEA,OAAAC,GASAA,EAAAhD,SAAArW,qBACArB,KAAA2Y,EAAAld,eACAif,EAAAjD,gBAAAhc,cAAA,GACAwE,OAAA0Y,EAAAnd,iBACAkf,EAAAjD,gBAAAhc,gBAAAkd,EAAAld,cACAif,EAAAjD,gBAAAjc,gBAAA,EACA,GACAmf,KAAA3iB,EAAA2iB,QAdAtf,OAAA,KACA2E,KAAA,KACAC,OAAA,KACAlJ,KAAA,OAmBAkgB,EAAAtf,UAAAyiB,wBACA,WACA,MAAAhkB,MAAAihB,UAAAuD,MAAA,SAAA9iB,GACA,MAAAA,GAAA4f,SAAA0C,6BASAnD,EAAAtf,UAAA6I,iBACA,SAAAgB,EAAA8Y,GACA,OAAA7jB,GAAA,EAAmBA,EAAAL,KAAAihB,UAAAjf,OAA2B3B,IAAA,CAC9C,GAAAikB,GAAAtkB,KAAAihB,UAAA5gB,GAEA8J,EAAAma,EAAAhD,SAAAlX,iBAAAgB,GAAA,EACA,IAAAjB,EACA,MAAAA,GAGA,GAAA+Z,EACA,WAGA,UAAAjiB,OAAA,IAAAmJ,EAAA,+BAkBAyV,EAAAtf,UAAA6iB,qBACA,SAAAxiB,GACA,OAAAvB,GAAA,EAAmBA,EAAAL,KAAAihB,UAAAjf,OAA2B3B,IAAA,CAC9C,GAAAikB,GAAAtkB,KAAAihB,UAAA5gB,EAIA,SAAAikB,EAAAhD,SAAAtX,QAAAhG,QAAAwE,EAAA7G,OAAAC,EAAA,YAGA,GAAA6iB,GAAAH,EAAAhD,SAAA8C,qBAAAxiB,EACA,IAAA6iB,EAAA,CASA,OAPA7a,KAAA6a,EAAA7a,MACA0a,EAAAjD,gBAAAhc,cAAA,GACAwE,OAAA4a,EAAA5a,QACAya,EAAAjD,gBAAAhc,gBAAAof,EAAA7a,KACA0a,EAAAjD,gBAAAjc,gBAAA,EACA,MAMA,OACAwE,KAAA,KACAC,OAAA,OASAgX,EAAAtf,UAAAmgB,eACA,SAAAld,EAAAgI,GACAxM,KAAAyhB,uBACAzhB,KAAA2hB,qBACA,QAAAthB,GAAA,EAAmBA,EAAAL,KAAAihB,UAAAjf,OAA2B3B,IAG9C,OAFAikB,GAAAtkB,KAAAihB,UAAA5gB,GACAqkB,EAAAJ,EAAAhD,SAAAc,mBACAla,EAAA,EAAqBA,EAAAwc,EAAA1iB,OAA4BkG,IAAA,CACjD,GAAAuB,GAAAib,EAAAxc,GAEAjD,EAAAqf,EAAAhD,SAAA3Y,SAAAkG,GAAApF,EAAAxE,OACA,QAAAqf,EAAAhD,SAAAjY,aACApE,EAAAuD,EAAAlF,KAAAghB,EAAAhD,SAAAjY,WAAApE,IAEAjF,KAAA2I,SAAA6B,IAAAvF,GACAA,EAAAjF,KAAA2I,SAAA3E,QAAAiB,EAEA,IAAAtE,GAAA2jB,EAAAhD,SAAAzY,OAAAgG,GAAApF,EAAA9I,KACAX,MAAA6I,OAAA2B,IAAA7J,GACAA,EAAAX,KAAA6I,OAAA7E,QAAArD,EAMA,IAAAgkB,IACA1f,SACAI,cAAAoE,EAAApE,eACAif,EAAAjD,gBAAAhc,cAAA,GACAD,gBAAAqE,EAAArE,iBACAkf,EAAAjD,gBAAAhc,gBAAAoE,EAAApE,cACAif,EAAAjD,gBAAAjc,gBAAA,EACA,GACAF,aAAAuE,EAAAvE,aACAC,eAAAsE,EAAAtE,eACAxE,OAGAX,MAAAyhB,oBAAA7S,KAAA+V,GACA,gBAAAA,GAAAzf,cACAlF,KAAA2hB,mBAAA/S,KAAA+V,GAKAnD,EAAAxhB,KAAAyhB,oBAAAjZ,EAAAlD,qCACAkc,EAAAxhB,KAAA2hB,mBAAAnZ,EAAA5D,6BAGAjF,EAAAkhB,4BlBkqFM,SAAUjhB,EAAQD,GmBpsHxB,QAAAilB,GAAAC,EAAAC,EAAAzB,EAAA0B,EAAAC,EAAAtB,GAUA,GAAAuB,GAAAxH,KAAAyH,OAAAJ,EAAAD,GAAA,GAAAA,EACA7f,EAAAggB,EAAA3B,EAAA0B,EAAAE,IAAA,EACA,YAAAjgB,EAEAigB,EAEAjgB,EAAA,EAEA8f,EAAAG,EAAA,EAEAL,EAAAK,EAAAH,EAAAzB,EAAA0B,EAAAC,EAAAtB,GAKAA,GAAA/jB,EAAAqiB,kBACA8C,EAAAC,EAAA/iB,OAAA8iB,GAAA,EAEAG,EAKAA,EAAAJ,EAAA,EAEAD,EAAAC,EAAAI,EAAA5B,EAAA0B,EAAAC,EAAAtB,GAIAA,GAAA/jB,EAAAqiB,kBACAiD,EAEAJ,EAAA,KAAAA,EA1DAllB,EAAAoiB,qBAAA,EACApiB,EAAAqiB,kBAAA,EAgFAriB,EAAAgkB,OAAA,SAAAN,EAAA0B,EAAAC,EAAAtB,GACA,OAAAqB,EAAA/iB,OACA,QAGA,IAAAiC,GAAA2gB,GAAA,EAAAG,EAAA/iB,OAAAqhB,EAAA0B,EACAC,EAAAtB,GAAA/jB,EAAAoiB,qBACA,IAAA9d,EAAA,EACA,QAMA,MAAAA,EAAA,MACA,IAAA+gB,EAAAD,EAAA9gB,GAAA8gB,EAAA9gB,EAAA,UAGAA,CAGA,OAAAA,KnBmuHM,SAAUrE,EAAQD,GoBrzHxB,QAAAwlB,GAAAC,EAAAC,EAAA/N,GACA,GAAA6L,GAAAiC,EAAAC,EACAD,GAAAC,GAAAD,EAAA9N,GACA8N,EAAA9N,GAAA6L,EAWA,QAAAmC,GAAAC,EAAAC,GACA,MAAA/H,MAAAgI,MAAAF,EAAA9H,KAAAiI,UAAAF,EAAAD,IAeA,QAAAI,GAAAP,EAAAQ,EAAAnkB,EAAAokB,GAKA,GAAApkB,EAAAokB,EAAA,CAYA,GAAAC,GAAAR,EAAA7jB,EAAAokB,GACAxlB,EAAAoB,EAAA,CAEA0jB,GAAAC,EAAAU,EAAAD,EASA,QARAE,GAAAX,EAAAS,GAQA3d,EAAAzG,EAAmByG,EAAA2d,EAAO3d,IAC1B0d,EAAAR,EAAAld,GAAA6d,IAAA,IACA1lB,GAAA,EACA8kB,EAAAC,EAAA/kB,EAAA6H,GAIAid,GAAAC,EAAA/kB,EAAA,EAAA6H,EACA,IAAA8d,GAAA3lB,EAAA,CAIAslB,GAAAP,EAAAQ,EAAAnkB,EAAAukB,EAAA,GACAL,EAAAP,EAAAQ,EAAAI,EAAA,EAAAH,IAYAlmB,EAAA6hB,UAAA,SAAA4D,EAAAQ,GACAD,EAAAP,EAAAQ,EAAA,EAAAR,EAAApjB,OAAA,KpBw1HM,SAAUpC,EAAQD,EAASO,GqBt6HjC,QAAAyf,GAAAsG,EAAAC,EAAA9a,EAAA+a,EAAAtkB,GACA7B,KAAAomB,YACApmB,KAAAqmB,kBACArmB,KAAA4J,KAAA,MAAAqc,EAAA,KAAAA,EACAjmB,KAAA6J,OAAA,MAAAqc,EAAA,KAAAA,EACAlmB,KAAAiF,OAAA,MAAAmG,EAAA,KAAAA,EACApL,KAAAW,KAAA,MAAAkB,EAAA,KAAAA,EACA7B,KAAAsmB,IAAA,EACA,MAAAH,GAAAnmB,KAAAwK,IAAA2b,GAnCA,GAAA7d,GAAApI,EAAA,GAAAoI,mBACAE,EAAAtI,EAAA,GAIAqmB,EAAA,UAQAD,EAAA,oBAiCA3G,GAAA6G,wBACA,SAAAC,EAAArd,EAAAsd,GAyFA,QAAAC,GAAAld,EAAA8T,GACA,UAAA9T,OAAAxD,KAAAwD,EAAAxE,OACA2hB,EAAApc,IAAA+S,OACO,CACP,GAAAtY,GAAAyhB,EACAle,EAAAlF,KAAAojB,EAAAjd,EAAAxE,QACAwE,EAAAxE,MACA2hB,GAAApc,IAAA,GAAAmV,GAAAlW,EAAAvE,aACAuE,EAAAtE,eACAF,EACAsY,EACA9T,EAAA9I,QAjGA,GAAAimB,GAAA,GAAAjH,GAMAkH,EAAAJ,EAAAtjB,MAAAojB,GACAO,EAAA,WAIA,MAHAD,GAAA/Y,SAEA+Y,EAAA/Y,SAAA,KAKAiZ,EAAA,EAAAjD,EAAA,EAKAkD,EAAA,IAgEA,OA9DA5d,GAAAI,YAAA,SAAAC,GACA,UAAAud,EAAA,CAGA,KAAAD,EAAAtd,EAAApE,eAMS,CAIT,GAAA4hB,GAAAJ,EAAA,GACAtJ,EAAA0J,EAAA5iB,OAAA,EAAAoF,EAAArE,gBACA0e,EAOA,OANA+C,GAAA,GAAAI,EAAA5iB,OAAAoF,EAAArE,gBACA0e,GACAA,EAAAra,EAAArE,gBACAuhB,EAAAK,EAAAzJ,QAEAyJ,EAAAvd,GAhBAkd,EAAAK,EAAAF,KACAC,IACAjD,EAAA,EAqBA,KAAAiD,EAAAtd,EAAApE,eACAuhB,EAAApc,IAAAsc,KACAC,GAEA,IAAAjD,EAAAra,EAAArE,gBAAA,CACA,GAAA6hB,GAAAJ,EAAA,EACAD,GAAApc,IAAAyc,EAAA5iB,OAAA,EAAAoF,EAAArE,kBACAyhB,EAAA,GAAAI,EAAA5iB,OAAAoF,EAAArE,iBACA0e,EAAAra,EAAArE,gBAEA4hB,EAAAvd,GACKzJ,MAEL6mB,EAAA7kB,OAAA,IACAglB,GAEAL,EAAAK,EAAAF,KAGAF,EAAApc,IAAAqc,EAAAvjB,KAAA,MAIA8F,EAAAY,QAAAC,QAAA,SAAAC,GACA,GAAAC,GAAAf,EAAAgB,iBAAAF,EACA,OAAAC,IACA,MAAAuc,IACAxc,EAAA1B,EAAAlF,KAAAojB,EAAAxc,IAEA0c,EAAAvc,iBAAAH,EAAAC,MAIAyc,GAwBAjH,EAAApe,UAAAiJ,IAAA,SAAA0c,GACA,GAAA9iB,MAAA+iB,QAAAD,GACAA,EAAAjd,QAAA,SAAAmd,GACApnB,KAAAwK,IAAA4c,IACKpnB,UAEL,KAAAknB,EAAAZ,IAAA,gBAAAY,GAMA,SAAAzf,WACA,8EAAAyf,EANAA,IACAlnB,KAAAomB,SAAAxX,KAAAsY,GAQA,MAAAlnB,OASA2f,EAAApe,UAAA8lB,QAAA,SAAAH,GACA,GAAA9iB,MAAA+iB,QAAAD,GACA,OAAA7mB,GAAA6mB,EAAAllB,OAAA,EAAiC3B,GAAA,EAAQA,IACzCL,KAAAqnB,QAAAH,EAAA7mB,QAGA,KAAA6mB,EAAAZ,IAAA,gBAAAY,GAIA,SAAAzf,WACA,8EAAAyf,EAJAlnB,MAAAomB,SAAAkB,QAAAJ,GAOA,MAAAlnB,OAUA2f,EAAApe,UAAAgmB,KAAA,SAAAC,GAEA,OADAJ,GACA/mB,EAAA,EAAA+L,EAAApM,KAAAomB,SAAApkB,OAA6C3B,EAAA+L,EAAS/L,IACtD+mB,EAAApnB,KAAAomB,SAAA/lB,GACA+mB,EAAAd,GACAc,EAAAG,KAAAC,GAGA,KAAAJ,GACAI,EAAAJ,GAAoBniB,OAAAjF,KAAAiF,OACpB2E,KAAA5J,KAAA4J,KACAC,OAAA7J,KAAA6J,OACAlJ,KAAAX,KAAAW,QAYAgf,EAAApe,UAAA+B,KAAA,SAAAmkB,GACA,GAAAC,GACArnB,EACA+L,EAAApM,KAAAomB,SAAApkB,MACA,IAAAoK,EAAA,GAEA,IADAsb,KACArnB,EAAA,EAAeA,EAAA+L,EAAA,EAAW/L,IAC1BqnB,EAAA9Y,KAAA5O,KAAAomB,SAAA/lB,IACAqnB,EAAA9Y,KAAA6Y,EAEAC,GAAA9Y,KAAA5O,KAAAomB,SAAA/lB,IACAL,KAAAomB,SAAAsB,EAEA,MAAA1nB,OAUA2f,EAAApe,UAAAomB,aAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA9nB,KAAAomB,SAAApmB,KAAAomB,SAAApkB,OAAA,EAUA,OATA8lB,GAAAxB,GACAwB,EAAAH,aAAAC,EAAAC,GAEA,gBAAAC,GACA9nB,KAAAomB,SAAApmB,KAAAomB,SAAApkB,OAAA,GAAA8lB,EAAAjkB,QAAA+jB,EAAAC,GAGA7nB,KAAAomB,SAAAxX,KAAA,GAAA/K,QAAA+jB,EAAAC,IAEA7nB,MAUA2f,EAAApe,UAAA8I,iBACA,SAAAI,EAAAC,GACA1K,KAAAqmB,eAAA7d,EAAAjE,YAAAkG,IAAAC,GASAiV,EAAApe,UAAAwmB,mBACA,SAAAP,GACA,OAAAnnB,GAAA,EAAA+L,EAAApM,KAAAomB,SAAApkB,OAA+C3B,EAAA+L,EAAS/L,IACxDL,KAAAomB,SAAA/lB,GAAAimB,IACAtmB,KAAAomB,SAAA/lB,GAAA0nB,mBAAAP,EAKA,QADAxd,GAAAlJ,OAAA6J,KAAA3K,KAAAqmB,gBACAhmB,EAAA,EAAA+L,EAAApC,EAAAhI,OAAyC3B,EAAA+L,EAAS/L,IAClDmnB,EAAAhf,EAAA9D,cAAAsF,EAAA3J,IAAAL,KAAAqmB,eAAArc,EAAA3J,MAQAsf,EAAApe,UAAAiG,SAAA,WACA,GAAAhB,GAAA,EAIA,OAHAxG,MAAAunB,KAAA,SAAAH,GACA5gB,GAAA4gB,IAEA5gB,GAOAmZ,EAAApe,UAAAymB,sBAAA,SAAApmB,GACA,GAAA+H,IACA4T,KAAA,GACA3T,KAAA,EACAC,OAAA,GAEA4C,EAAA,GAAAnE,GAAA1G,GACAqmB,GAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,IAqEA,OApEAroB,MAAAunB,KAAA,SAAAH,EAAAtd,GACAH,EAAA4T,MAAA6J,EACA,OAAAtd,EAAA7E,QACA,OAAA6E,EAAAF,MACA,OAAAE,EAAAD,QACAqe,IAAApe,EAAA7E,QACAkjB,IAAAre,EAAAF,MACAwe,IAAAte,EAAAD,QACAwe,IAAAve,EAAAnJ,MACA8L,EAAA1C,YACA9E,OAAA6E,EAAA7E,OACA6E,UACAF,KAAAE,EAAAF,KACAC,OAAAC,EAAAD,QAEAF,WACAC,KAAAD,EAAAC,KACAC,OAAAF,EAAAE,QAEAlJ,KAAAmJ,EAAAnJ,OAGAunB,EAAApe,EAAA7E,OACAkjB,EAAAre,EAAAF,KACAwe,EAAAte,EAAAD,OACAwe,EAAAve,EAAAnJ,KACAsnB,GAAA,GACKA,IACLxb,EAAA1C,YACAJ,WACAC,KAAAD,EAAAC,KACAC,OAAAF,EAAAE,UAGAqe,EAAA,KACAD,GAAA,EAEA,QAAAtZ,GAAA,EAAA3M,EAAAolB,EAAAplB,OAA4C2M,EAAA3M,EAAc2M,IArW1D,KAsWAyY,EAAAziB,WAAAgK,IACAhF,EAAAC,OACAD,EAAAE,OAAA,EAEA8E,EAAA,IAAA3M,GACAkmB,EAAA,KACAD,GAAA,GACSA,GACTxb,EAAA1C,YACA9E,OAAA6E,EAAA7E,OACA6E,UACAF,KAAAE,EAAAF,KACAC,OAAAC,EAAAD,QAEAF,WACAC,KAAAD,EAAAC,KACAC,OAAAF,EAAAE,QAEAlJ,KAAAmJ,EAAAnJ,QAIAgJ,EAAAE,WAIA7J,KAAA+nB,mBAAA,SAAA7d,EAAAoe,GACA7b,EAAApC,iBAAAH,EAAAoe,MAGU/K,KAAA5T,EAAA4T,KAAA9Q,QAGV9M,EAAAggB,crB+8HM,SAAU/f,EAAQD,EAASO,GAEjC,YAEA,SAASqoB,GAAS/nB,GACd,IAAK,GAAIiB,KAAKjB,GAAQb,EAAQ6B,eAAeC,KAAI9B,EAAQ8B,GAAKjB,EAAEiB,IAEpEX,OAAOC,eAAepB,EAAS,cAAgBoO,OAAO,IsB52ItDwa,EAAAroB,EAAA,IACAqoB,EAAAroB,EAAA,MtBk3IM,SAAUN,EAAQD,EAASO,GAEjC,YuBr3IA,SAAAsoB,MvBu3IA1nB,OAAOC,eAAepB,EAAS,cAAgBoO,OAAO,IuBv3ItDpO,EAAA6oB,gBvB83IM,SAAU5oB,EAAQD,EAASO,GAEjC,YAKAY,QAAOC,eAAepB,EAAS,cAAgBoO,OAAO,IAHtD,SAAkBvN,GACd,IAAK,GAAIiB,KAAKjB,GAAQb,EAAQ6B,eAAeC,KAAI9B,EAAQ8B,GAAKjB,EAAEiB,KwBn4IpEvB,EAAA,KxB24IM,SAAUN,EAAQD,EAASO,GAEjC,YAEAY,QAAOC,eAAepB,EAAS,cAAgBoO,OAAO,GyB/4ItD,IAAAgK,GAAA7X,EAAA,EAEaP,GAAAkW,sBAAwBkC,EAAA7I,YACnC,uBACAjN,OAEEkR,YAAa,GACbnE,QAAS,SAACuB,GACR,MAAO,YAAYA,EAAE4C,YAAW,8CzBm5IhC,SAAUvT,EAAQD,EAASO,GAEjC,Y0B34IA,SAAAoS,GAA8BmW,GAC5B,MAAOA,KAAarkB,MAAM+iB,QAAQsB,IAAaA,YAAoB3S,MAGrE,QAAA4S,GAA+BC,GAC7B,GAAMC,GAAc,GAAI9S,KAAI6S,GACtBF,EAAqB,SAAC9X,GAC1B,GAAIkY,GACEzmB,EAAQgC,MAAM6O,KAAK2V,EAAYje,QAAQmJ,KAC3C,SAACgV,GAAqB,MAAAnY,aAAiBmY,IAEzC,IAAI1mB,EACFymB,EAAmBD,EAAY1nB,IAAIkB,OAC9B,CACL,IAAKqmB,EAASM,YAAa,MAC3BF,GAAmBJ,EAASM,YAE9BF,EAAkBlY,GAYpB,OATA8X,GAASje,IAAM,SAACse,EAAeE,GAC7B,MAAAJ,GAAYta,IAAIwa,EAAQE,IAC1BP,EAASQ,OAAS,SAACH,EAAeE,GAChC,MAAAJ,GAAYM,OAAOJ,IACrBL,EAASU,WAAa,SAACH,GAErB,MADAP,GAASM,YAAcC,EAChBA,GAGFP,EAGT,QAAAlW,GAAqCoW,GACnC,GAAMF,GAAWC,EAAeC,EAEhC,OADAF,GAASU,WAAYC,EAAA1Y,iBACd+X,EAGT,QAAAhW,GAAqCkW,GACnC,GAAMF,GAAWC,EAAeC,EAEhC,OADAF,GAASU,WAAYE,EAAAxX,kBACd4W,E1Bo2IT3nB,OAAOC,eAAepB,EAAS,cAAgBoO,OAAO,G0B95ItD,IAAAqb,GAAAlpB,EAAA,GACAmpB,EAAAnpB,EAAA,EAgBAP,GAAA2S,gBAIA3S,EAAA+oB,iBA4BA/oB,EAAA4S,uBAMA5S,EAAA8S","file":"madcap.core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"Madcap\"] = root[\"Madcap\"] || {}, root[\"Madcap\"][\"core\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"Madcap\"] = root[\"Madcap\"] || {}, root[\"Madcap\"][\"core\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = __webpack_require__(3);\nvar util = __webpack_require__(0);\nvar ArraySet = __webpack_require__(4).ArraySet;\nvar MappingList = __webpack_require__(15).MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = __webpack_require__(14);\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(0);\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = util.toSetString(aStr);\n  var isDuplicate = has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    this._set[sStr] = idx;\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  var sStr = util.toSetString(aStr);\n  return has.call(this._set, sStr);\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  var sStr = util.toSetString(aStr);\n  if (has.call(this._set, sStr)) {\n    return this._set[sStr];\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction arePropsValid(props) {\n    return (typeof props.message === 'string' || typeof props.message === 'function');\n}\nfunction validateMessage(props) {\n    if (!arePropsValid(props)) {\n        throw new TypeError('message either needs to be a string or a function that returns a string');\n    }\n    return true;\n}\nfunction createError(name, ParentError, defaultProps) {\n    if (ParentError === void 0) { ParentError = Error; }\n    if (defaultProps === void 0) { defaultProps = {}; }\n    if (typeof name !== 'string') {\n        throw new TypeError('expected \"name\" to be a string.');\n    }\n    if (ParentError !== Error &&\n        !Error.prototype.isPrototypeOf(ParentError.prototype)) {\n        throw new TypeError('expected \"ParentError\" to extend Error or a subclass of Error');\n    }\n    validateMessage(defaultProps);\n    var _a = defaultProps, defaultMessage = _a.message, restDefaultProps = __rest(_a, [\"message\"]);\n    var getMessage = typeof defaultMessage === 'string' ? function () { return defaultMessage; } : defaultMessage;\n    var CustomError = function (message, props) {\n        if (!(this instanceof CustomError)) {\n            return new CustomError(message, props);\n        }\n        if (arguments.length === 1) {\n            props = message;\n            message = props.message;\n        }\n        var proxy = new ParentError();\n        Object.setPrototypeOf(proxy, Object.getPrototypeOf(this));\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(proxy, CustomError);\n        }\n        Object.assign(proxy, props);\n        proxy.name = name;\n        proxy.message =\n            typeof message === 'function'\n                ? message(proxy)\n                : message || getMessage(proxy);\n        return proxy;\n    };\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(CustomError, ParentError);\n    }\n    else {\n        CustomError.__proto__ = ParentError;\n    }\n    Object.defineProperty(CustomError, 'name', {\n        value: name,\n        enumerable: false,\n        configurable: true,\n        writable: false\n    });\n    CustomError.configure = function (config) {\n        validateMessage(config);\n        if (typeof config.message !== 'string' &&\n            typeof config.message !== 'function') {\n            throw new TypeError('message either needs to be a string or a function that returns a string');\n        }\n        else {\n            getMessage =\n                typeof config.message === 'string'\n                    ? function () { return config.message; }\n                    : config.message;\n        }\n        var message = config.message, configRest = __rest(config, [\"message\"]);\n        Object.assign(CustomError.prototype, configRest);\n    };\n    CustomError.prototype = Object.create(ParentError.prototype, {\n        constructor: {\n            value: CustomError,\n            enumerable: false,\n            configurable: true,\n            writable: true\n        },\n        toString: {\n            value: function () {\n                return 'foo';\n            },\n            enumerable: false,\n            configurable: true,\n            writable: true\n        }\n    });\n    Object.assign(CustomError.prototype, restDefaultProps);\n    return CustomError;\n}\nexports.createError = createError;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Attempt = /** @class */ (function () {\n    function Attempt(attempt) {\n        this.location = attempt.location;\n    }\n    return Attempt;\n}());\nfunction consoleReporter(error) {\n    if (__DEBUG__) {\n        console.group('%c%s', 'color: red', error.message);\n        console.error(error);\n        console.log(\"Location: \" + location.origin + error.fileName + \":\" + error.lineNumber + \":\" + error.columnNumber + \"\\n\");\n        if (error.attempts) {\n            var attemptsReportStr = error.attempts.reduce(function (report, attempt, index) {\n                report += '%d)    Name: %s\\n';\n                report += '   Context: %O\\n';\n                report += \"  Location: %s\\n\";\n                report += '\\n';\n                return report;\n            }, '');\n            var attemptsReportLogValues = error.attempts.reduce(function (report, attempt, index) {\n                report.push(index + 1);\n                report.push(attempt.name);\n                report.push(attempt.context || 'none provided');\n                report.push(location.origin + attempt.location);\n                return report;\n            }, []);\n            console.log.apply(console, [\"Attempts:\\n\\n\" + attemptsReportStr].concat(attemptsReportLogValues));\n        }\n    }\n    return error;\n}\nexports.consoleReporter = consoleReporter;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction retryThenRecover(error /*, retry, retryTimes, recover*/) {\n    console.log(error);\n    // if (error.retry && error.retriedCount) {\n    // }\n}\nexports.retryThenRecover = retryThenRecover;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StackTrace = __webpack_require__(9);\nvar createError_1 = __webpack_require__(5);\nexports.createError = createError_1.createError;\nvar reporters_1 = __webpack_require__(20);\nvar handlers_1 = __webpack_require__(22);\nvar UndefinedAttemptError_1 = __webpack_require__(23);\nvar strategy_1 = __webpack_require__(24);\nexports.createReportStrategy = strategy_1.createReportStrategy;\nexports.createHandleStrategy = strategy_1.createHandleStrategy;\nfunction warnToConfigureHandle() {\n    console.warn('You need to configure a handler');\n}\nfunction isAttemptFunction(a) {\n    return typeof a === 'function';\n}\n// sdfsdf\nfunction cleanStack(stackFrame, index, stackFrames, removeFirst) {\n    var isAttemptFn = stackFrame.functionName && stackFrame.functionName.endsWith('attempt');\n    if (removeFirst) {\n        return index !== 0 && !isAttemptFn;\n    }\n    return index === 0 || !isAttemptFn;\n}\nvar cleanAttemptStack = function (stackFrame, index, stackFrames) { return cleanStack(stackFrame, index, stackFrames, true); };\nfunction Madcap(initConfig) {\n    /*\n     * A Map instance with shape Map<AttemptFunction, Attempt[]>, held in the\n     * Madcap function closure, that stores attempt data. This data supplies\n     * the .attemptRoot (Function) and .attempts (Attempt[]) properties to errors.\n     */\n    var attemptsMap = new Map();\n    var config = {\n        report: reporters_1.consoleReporter,\n        handle: warnToConfigureHandle,\n        allowUndefinedAttempts: false\n    };\n    if (typeof initConfig === 'object') {\n        configure(initConfig);\n    }\n    function configure(mergeConfig) {\n        if (strategy_1.isStrategyMap(mergeConfig.report)) {\n            mergeConfig.report = strategy_1.createReportStrategy(mergeConfig.report);\n        }\n        if (strategy_1.isStrategyMap(mergeConfig.handle)) {\n            mergeConfig.handle = strategy_1.createHandleStrategy(mergeConfig.handle);\n        }\n        Object.assign(config, mergeConfig);\n        // By default, v8 includes the 10 topmost stack frames\n        // https://github.com/v8/v8/wiki/Stack-Trace-API#basic-stack-traces\n        // Can be configured by setting Error.stackTraceLimit = number | Infinity\n        if (config.stackTraceLimit) {\n            Error.stackTraceLimit = config.stackTraceLimit;\n        }\n        return config;\n    }\n    function prepareError(error, stackFrames) {\n        stackFrames = error.trace || stackFrames;\n        var topFrame = stackFrames[0];\n        var attempts = attemptsMap.get(error.attemptFn) ||\n            Array.from(attemptsMap.values()).slice()[0] ||\n            [];\n        var attemptName = (attempts[0] && attempts[0].name) || 'before first attempt';\n        var msg = (error.message = \"[APP/\" + attemptName + \"] \" + error.message);\n        if (stackFrames.length === 1) {\n            var shouldAppendFrames = !attempts.some(function (attempt) {\n                var attemptFrames = attempt.stackFrames;\n                return attemptFrames.some(function (frame) {\n                    return frame.fileName === topFrame.fileName &&\n                        frame.lineNumber === topFrame.lineNumber &&\n                        frame.columnNumber === topFrame.columnNumber;\n                });\n            });\n            if (shouldAppendFrames) {\n                stackFrames = attempts.reduce(function (frames, attempt) { return frames.concat(attempt.stackFrames); }, [stackFrames[0]]);\n            }\n        }\n        var stackString = stackFrames\n            .filter(function (l) { return l.source; })\n            .map(function (f) { return f.source; })\n            .join('\\n');\n        error.message = msg;\n        error.stack = stackString;\n        error.fileName = topFrame.fileName;\n        error.lineNumber = topFrame.lineNumber;\n        error.columnNumber = topFrame.columnNumber;\n        error.attempts = attempts;\n        return error;\n    }\n    function getAttemptLocation(stackFrames) {\n        // const revStackFrames = stackFrames.slice(0).reverse();\n        var attemptFrame = stackFrames.find(function (stackFrame) { return !stackFrame.fileName.includes('madcap-core'); });\n        if (attemptFrame) {\n            return attemptFrame.fileName + \":\" + attemptFrame.lineNumber + \":\" + attemptFrame.columnNumber;\n        }\n    }\n    function attempt(name, contextOrFn, fnOrPastAttempts, pastAttempts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            function subattempt(name, fn) {\n                return attempt(name, fn, attempts);\n            }\n            var context, fn, stackFrames, attempts, location, ret_1, ret;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (isAttemptFunction(fnOrPastAttempts)) {\n                            context = contextOrFn;\n                            fn = fnOrPastAttempts;\n                        }\n                        else {\n                            fn = contextOrFn;\n                            pastAttempts = fnOrPastAttempts;\n                        }\n                        return [4 /*yield*/, StackTrace.get()];\n                    case 1:\n                        stackFrames = _a.sent();\n                        attempts = pastAttempts || attemptsMap.get(fn) || [];\n                        location = getAttemptLocation(stackFrames);\n                        if (!attempts.length) {\n                            attempts = [{ name: name, function: fn, stackFrames: stackFrames, context: context, location: location }];\n                            attemptsMap.set(fn, attempts);\n                            ret_1 = attempt(name, fn).catch(function (error) { return __awaiter(_this, void 0, void 0, function () {\n                                var _a, newStackFrames, errorEvent;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0:\n                                            if (!!error.trace) return [3 /*break*/, 2];\n                                            _a = error;\n                                            return [4 /*yield*/, StackTrace.fromError(error)];\n                                        case 1:\n                                            _a.trace = _b.sent();\n                                            newStackFrames = attempts\n                                                .reverse()\n                                                .map(function (attempt) { return attempt.stackFrames; })\n                                                .reduce(function (result, frames) { return result.concat(frames); }, []);\n                                            error.trace = error.trace.concat(newStackFrames);\n                                            error.attemptFn = fn;\n                                            error.attempts = attempts.reverse();\n                                            errorEvent = new ErrorEvent('error', {\n                                                filename: error.fileName,\n                                                lineno: error.lineNumber,\n                                                colno: error.columnNumber,\n                                                message: error.message,\n                                                error: error\n                                            });\n                                            window.dispatchEvent(errorEvent);\n                                            _b.label = 2;\n                                        case 2: \n                                        // Prevent a subsequent .then callback from running\n                                        throw error;\n                                    }\n                                });\n                            }); });\n                            return [2 /*return*/, ret_1];\n                        }\n                        if (fn !== attempts[0].function) {\n                            attempts.push({ name: name, function: fn, stackFrames: stackFrames, context: context, location: location });\n                        }\n                        ret = fn(subattempt);\n                        if (ret === undefined) {\n                            if (!config.allowUndefinedAttempts) {\n                                throw new UndefinedAttemptError_1.UndefinedAttemptError({ attemptName: name });\n                            }\n                            // Just nag instead. No throwing nonsense.\n                            console.warn(\"Attempt \" + name + \" returns undefined. Is it a work in progress?\");\n                        }\n                        return [2 /*return*/, ret];\n                }\n            });\n        });\n    }\n    if (typeof window !== 'undefined') {\n        window.onerror = function (msg, url, line, col, error) {\n            if (error && !error.attempts) {\n                error.isHandled = true;\n                StackTrace.fromError(error)\n                    .then(prepareError.bind(null, error))\n                    .then(config.report.bind(null, error))\n                    .then(config.handle.bind(null, error));\n            }\n            // Return true to prevent the browser from further handling the error\n            return true;\n        };\n        window.addEventListener('unhandledrejection', function (e) {\n            e.preventDefault();\n            var error = e.reason;\n            if (error.isHandled)\n                return;\n            StackTrace.fromError(error)\n                .then(prepareError.bind(null, error))\n                .then(config.report.bind(null, error))\n                .then(config.handle.bind(null, error));\n        });\n    }\n    // Public Madcap strategy API\n    return {\n        attempt: attempt,\n        configure: configure\n    };\n}\nexports.default = Madcap;\nvar reporters = {\n    consoleReporter: reporters_1.consoleReporter\n};\nexports.reporters = reporters;\nvar handlers = {\n    retryThenRecover: handlers_1.retryThenRecover\n};\nexports.handlers = handlers;\nvar errors = {};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(10), __webpack_require__(11), __webpack_require__(12)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\n    } else {\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\n    }\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\n    var _options = {\n        filter: function(stackframe) {\n            // Filter out stackframes for this library by default\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\n        },\n        sourceCache: {}\n    };\n\n    var _generateError = function StackTrace$$GenerateError() {\n        try {\n            // Error must be thrown to get stack in IE\n            throw new Error();\n        } catch (err) {\n            return err;\n        }\n    };\n\n    /**\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\n     * Does not do deep merges.\n     *\n     * @param {Object} first base object\n     * @param {Object} second overrides\n     * @returns {Object} merged first and second\n     * @private\n     */\n    function _merge(first, second) {\n        var target = {};\n\n        [first, second].forEach(function(obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    target[prop] = obj[prop];\n                }\n            }\n            return target;\n        });\n\n        return target;\n    }\n\n    function _isShapedLikeParsableError(err) {\n        return err.stack || err['opera#sourceloc'];\n    }\n\n    function _filtered(stackframes, filter) {\n        if (typeof filter === 'function') {\n            return stackframes.filter(filter);\n        }\n        return stackframes;\n    }\n\n    return {\n        /**\n         * Get a backtrace from invocation point.\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        get: function StackTrace$$get(opts) {\n            var err = _generateError();\n            return _isShapedLikeParsableError(err) ? this.fromError(err, opts) : this.generateArtificially(opts);\n        },\n\n        /**\n         * Get a backtrace from invocation point.\n         * IMPORTANT: Does not handle source maps or guess function names!\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        getSync: function StackTrace$$getSync(opts) {\n            opts = _merge(_options, opts);\n            var err = _generateError();\n            var stack = _isShapedLikeParsableError(err) ? ErrorStackParser.parse(err) : StackGenerator.backtrace(opts);\n            return _filtered(stack, opts.filter);\n        },\n\n        /**\n         * Given an error object, parse it.\n         *\n         * @param {Error} error object\n         * @param {Object} opts\n         * @returns {Promise} for Array[StackFrame}\n         */\n        fromError: function StackTrace$$fromError(error, opts) {\n            opts = _merge(_options, opts);\n            var gps = new StackTraceGPS(opts);\n            return new Promise(function(resolve) {\n                var stackframes = _filtered(ErrorStackParser.parse(error), opts.filter);\n                resolve(Promise.all(stackframes.map(function(sf) {\n                    return new Promise(function(resolve) {\n                        function resolveOriginal() {\n                            resolve(sf);\n                        }\n\n                        gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\n                    });\n                })));\n            }.bind(this));\n        },\n\n        /**\n         * Use StackGenerator to generate a backtrace.\n         *\n         * @param {Object} opts\n         * @returns {Promise} of Array[StackFrame]\n         */\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\n            opts = _merge(_options, opts);\n            var stackFrames = StackGenerator.backtrace(opts);\n            if (typeof opts.filter === 'function') {\n                stackFrames = stackFrames.filter(opts.filter);\n            }\n            return Promise.resolve(stackFrames);\n        },\n\n        /**\n         * Given a function, wrap it such that invocations trigger a callback that\n         * is called with a stack trace.\n         *\n         * @param {Function} fn to be instrumented\n         * @param {Function} callback function to call with a stack trace on invocation\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\n         * @param {Object} thisArg optional context object (e.g. window)\n         */\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                // Already instrumented, return given Function\n                return fn;\n            }\n\n            var instrumented = function StackTrace$$instrumented() {\n                try {\n                    this.get().then(callback, errback)['catch'](errback);\n                    return fn.apply(thisArg || this, arguments);\n                } catch (e) {\n                    if (_isShapedLikeParsableError(e)) {\n                        this.fromError(e).then(callback, errback)['catch'](errback);\n                    }\n                    throw e;\n                }\n            }.bind(this);\n            instrumented.__stacktraceOriginalFn = fn;\n\n            return instrumented;\n        },\n\n        /**\n         * Given a function that has been instrumented,\n         * revert the function to it's original (non-instrumented) state.\n         *\n         * @param {Function} fn to de-instrument\n         */\n        deinstrument: function StackTrace$$deinstrument(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot de-instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                return fn.__stacktraceOriginalFn;\n            } else {\n                // Function not instrumented, return original\n                return fn;\n            }\n        },\n\n        /**\n         * Given an error message and Array of StackFrames, serialize and POST to given URL.\n         *\n         * @param {Array} stackframes\n         * @param {String} url\n         * @param {String} errorMsg\n         * @param {Object} requestOptions\n         */\n        report: function StackTrace$$report(stackframes, url, errorMsg, requestOptions) {\n            return new Promise(function(resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.onerror = reject;\n                req.onreadystatechange = function onreadystatechange() {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 400) {\n                            resolve(req.responseText);\n                        } else {\n                            reject(new Error('POST to ' + url + ' failed with status: ' + req.status));\n                        }\n                    }\n                };\n                req.open('post', url);\n\n                // Set request headers\n                req.setRequestHeader('Content-Type', 'application/json');\n                if (requestOptions && typeof requestOptions.headers === 'object') {\n                    var headers = requestOptions.headers;\n                    for (var header in headers) {\n                        if (headers.hasOwnProperty(header)) {\n                            req.setRequestHeader(header, headers[header]);\n                        }\n                    }\n                }\n\n                var reportPayload = {stack: stackframes};\n                if (errorMsg !== undefined && errorMsg !== null) {\n                    reportPayload.message = errorMsg;\n                }\n\n                req.send(JSON.stringify(reportPayload));\n            });\n        }\n    };\n}));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(13), __webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\n    }\n}(this, function(SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param {String} url\n     * @returns {Promise} with response text if fulfilled\n     */\n    function _xdr(url) {\n        return new Promise(function(resolve, reject) {\n            var req = new XMLHttpRequest();\n            req.open('get', url);\n            req.onerror = reject;\n            req.onreadystatechange = function onreadystatechange() {\n                if (req.readyState === 4) {\n                    if ((req.status >= 200 && req.status < 300) ||\n                        (url.substr(0, 7) === 'file://' && req.responseText)) {\n                        resolve(req.responseText);\n                    } else {\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\n                    }\n                }\n            };\n            req.send();\n        });\n\n    }\n\n    /**\n     * Convert a Base64-encoded string into its original representation.\n     * Used for inline sourcemaps.\n     *\n     * @param {String} b64str Base-64 encoded string\n     * @returns {String} original representation of the base64-encoded string.\n     */\n    function _atob(b64str) {\n        if (typeof window !== 'undefined' && window.atob) {\n            return window.atob(b64str);\n        } else {\n            throw new Error('You must supply a polyfill for window.atob in this environment');\n        }\n    }\n\n    function _parseJson(string) {\n        if (typeof JSON !== 'undefined' && JSON.parse) {\n            return JSON.parse(string);\n        } else {\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\n        }\n    }\n\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\n        var syntaxes = [\n            // {name} = function ({args}) TODO args capture\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/,\n            // function {name}({args}) m[1]=name m[2]=args\n            /function\\s+([^('\"`]*?)\\s*\\(([^)]*)\\)/,\n            // {name} = eval()\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/,\n            // fn_name() {\n            /\\b(?!(?:if|for|switch|while|with|catch)\\b)(?:(?:static)\\s+)?(\\S+)\\s*\\(.*?\\)\\s*\\{/,\n            // {name} = () => {\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*\\(.*?\\)\\s*=>/\n        ];\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '';\n        var maxLines = Math.min(lineNumber, 20);\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            var line = lines[lineNumber - i - 1];\n            var commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                var len = syntaxes.length;\n                for (var index = 0; index < len; index++) {\n                    var m = syntaxes[index].exec(code);\n                    if (m && m[1]) {\n                        return m[1];\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' ||\n            stackframe.lineNumber % 1 !== 0 ||\n            stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' ||\n            stackframe.columnNumber % 1 !== 0 ||\n            stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var sourceMappingUrlRegExp = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/mg;\n        var lastSourceMappingUrl;\n        var matchSourceMappingUrl;\n        while (matchSourceMappingUrl = sourceMappingUrlRegExp.exec(source)) { // jshint ignore:line\n            lastSourceMappingUrl = matchSourceMappingUrl[1];\n        }\n        if (lastSourceMappingUrl) {\n            return lastSourceMappingUrl;\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache) {\n        return new Promise(function(resolve, reject) {\n            var loc = sourceMapConsumer.originalPositionFor({\n                line: stackframe.lineNumber,\n                column: stackframe.columnNumber\n            });\n\n            if (loc.source) {\n                // cache mapped sources\n                var mappedSource = sourceMapConsumer.sourceContentFor(loc.source);\n                if (mappedSource) {\n                    sourceCache[loc.source] = mappedSource;\n                }\n\n                resolve(\n                    // given stackframe and source location, update stackframe\n                    new StackFrame({\n                        functionName: loc.name || stackframe.functionName,\n                        args: stackframe.args,\n                        fileName: loc.source,\n                        lineNumber: loc.line,\n                        columnNumber: loc.column\n                    }));\n            } else {\n                reject(new Error('Could not get original source for given stackframe and source map'));\n            }\n        });\n    }\n\n    /**\n     * @constructor\n     * @param {Object} opts\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.sourceMapConsumerCache = {/path/file.js.map: SourceMapConsumer}\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     *      opts.ajax = Promise returning function to make X-Domain requests\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n        this.sourceMapConsumerCache = opts.sourceMapConsumerCache || {};\n\n        this.ajax = opts.ajax || _xdr;\n\n        this._atob = opts.atob || _atob;\n\n        this._get = function _get(location) {\n            return new Promise(function(resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        // data URLs can have parameters.\n                        // see http://tools.ietf.org/html/rfc2397\n                        var supportedEncodingRegexp =\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                        var match = location.match(supportedEncodingRegexp);\n                        if (match) {\n                            var sourceMapStart = match[0].length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        } else {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        }\n                    } else {\n                        var xhrPromise = this.ajax(location, {method: 'get'});\n                        // Cache the Promise to prevent duplicate in-flight requests\n                        this.sourceCache[location] = xhrPromise;\n                        xhrPromise.then(resolve, reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Creating SourceMapConsumers is expensive, so this wraps the creation of a\n         * SourceMapConsumer in a per-instance cache.\n         *\n         * @param {String} sourceMappingURL = URL to fetch source map from\n         * @param {String} defaultSourceRoot = Default source root for source map if undefined\n         * @returns {Promise} that resolves a SourceMapConsumer\n         */\n        this._getSourceMapConsumer = function _getSourceMapConsumer(sourceMappingURL, defaultSourceRoot) {\n            return new Promise(function(resolve, reject) {\n                if (this.sourceMapConsumerCache[sourceMappingURL]) {\n                    resolve(this.sourceMapConsumerCache[sourceMappingURL]);\n                } else {\n                    var sourceMapConsumerPromise = new Promise(function(resolve, reject) {\n                        return this._get(sourceMappingURL).then(function(sourceMapSource) {\n                            if (typeof sourceMapSource === 'string') {\n                                sourceMapSource = _parseJson(sourceMapSource.replace(/^\\)\\]\\}'/, ''));\n                            }\n                            if (typeof sourceMapSource.sourceRoot === 'undefined') {\n                                sourceMapSource.sourceRoot = defaultSourceRoot;\n                            }\n\n                            resolve(new SourceMap.SourceMapConsumer(sourceMapSource));\n                        }, reject);\n                    }.bind(this));\n                    this.sourceMapConsumerCache[sourceMappingURL] = sourceMapConsumerPromise;\n                    resolve(sourceMapConsumerPromise);\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param {StackFrame} stackframe object\n         * @returns {Promise} that resolves with with source-mapped StackFrame\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function(resolve, reject) {\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var lineNumber = stackframe.lineNumber;\n                    var columnNumber = stackframe.columnNumber;\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                    // Only replace functionName if we found something\n                    if (guessedFunctionName) {\n                        resolve(new StackFrame({\n                            functionName: guessedFunctionName,\n                            args: stackframe.args,\n                            fileName: stackframe.fileName,\n                            lineNumber: lineNumber,\n                            columnNumber: columnNumber\n                        }));\n                    } else {\n                        resolve(stackframe);\n                    }\n                }, reject)['catch'](reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var sourceCache = this.sourceCache;\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function(source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\n                    var defaultSourceRoot = fileName.substring(0, fileName.lastIndexOf('/') + 1);\n\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\n                        sourceMappingURL = defaultSourceRoot + sourceMappingURL;\n                    }\n\n                    return this._getSourceMapConsumer(sourceMappingURL, defaultSourceRoot)\n                        .then(function(sourceMapConsumer) {\n                            return _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache)\n                                .then(resolve)['catch'](function() {\n                                resolve(stackframe);\n                            });\n                        });\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = __webpack_require__(2).SourceMapGenerator;\nexports.SourceMapConsumer = __webpack_require__(16).SourceMapConsumer;\nexports.SourceNode = __webpack_require__(19).SourceNode;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(0);\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(0);\nvar binarySearch = __webpack_require__(17);\nvar ArraySet = __webpack_require__(4).ArraySet;\nvar base64VLQ = __webpack_require__(3);\nvar quickSort = __webpack_require__(18).quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = __webpack_require__(2).SourceMapGenerator;\nvar util = __webpack_require__(0);\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are removed from this array, by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var shiftNextLine = function() {\n      var lineContents = remainingLines.shift();\n      // The last line of a file might not have a newline.\n      var newLine = remainingLines.shift() || \"\";\n      return lineContents + newLine;\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[0];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[0];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLines.length > 0) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(6));\n__export(__webpack_require__(21));\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction errorOverlay() { }\nexports.errorOverlay = errorOverlay;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(7));\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar createError_1 = __webpack_require__(5);\nexports.UndefinedAttemptError = createError_1.createError('UndefinedAttempError', Error, {\n    attemptName: '',\n    message: function (e) {\n        return \"Attempt \\\"\" + e.attemptName + \"\\\" failed because undefined was returned\";\n    }\n});\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar console_1 = __webpack_require__(6);\nvar retryThenRecover_1 = __webpack_require__(7);\nfunction isStrategyMap(strategy) {\n    return strategy && (Array.isArray(strategy) || strategy instanceof Map);\n}\nexports.isStrategyMap = isStrategyMap;\nfunction createStrategy(strategyDef) {\n    var strategyMap = new Map(strategyDef);\n    var strategy = function (error) {\n        var resolvedStrategy;\n        var match = Array.from(strategyMap.keys()).find(function (constr) { return error instanceof constr; });\n        if (match) {\n            resolvedStrategy = strategyMap.get(match);\n        }\n        else {\n            if (!strategy.__default__)\n                return;\n            resolvedStrategy = strategy.__default__;\n        }\n        resolvedStrategy(error);\n    };\n    strategy.add = function (constr, handler) {\n        return strategyMap.set(constr, handler);\n    };\n    strategy.remove = function (constr, handler) {\n        return strategyMap.delete(constr);\n    };\n    strategy.setDefault = function (handler) {\n        strategy.__default__ = handler;\n        return handler;\n    };\n    return strategy;\n}\nexports.createStrategy = createStrategy;\nfunction createReportStrategy(strategyDef) {\n    var strategy = createStrategy(strategyDef);\n    strategy.setDefault(console_1.consoleReporter);\n    return strategy;\n}\nexports.createReportStrategy = createReportStrategy;\nfunction createHandleStrategy(strategyDef) {\n    var strategy = createStrategy(strategyDef);\n    strategy.setDefault(retryThenRecover_1.retryThenRecover);\n    return strategy;\n}\nexports.createHandleStrategy = createHandleStrategy;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// madcap.core.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1e6e82f97a87f476eade","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/util.js\n// module id = 0\n// module chunks = 0","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/stackframe/stackframe.js\n// module id = 1\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/source-map-generator.js\n// module id = 2\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/base64-vlq.js\n// module id = 3\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = util.toSetString(aStr);\n  var isDuplicate = has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    this._set[sStr] = idx;\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  var sStr = util.toSetString(aStr);\n  return has.call(this._set, sStr);\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  var sStr = util.toSetString(aStr);\n  if (has.call(this._set, sStr)) {\n    return this._set[sStr];\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/array-set.js\n// module id = 4\n// module chunks = 0","import { AttemptFunction, Attempt, Retry } from '../index';\n\nexport interface MadcapError extends Error {\n  trace?: StackTrace.StackFrame[];\n  fileName: string;\n  lineNumber: number;\n  columnNumber: number;\n  attemptFn: AttemptFunction;\n  attempts: Attempt[];\n  readonly retries: Retry[];\n  retry?: (error: MadcapError) => any;\n  recover?: (error: MadcapError) => any;\n  [key: string]: any;\n}\n\nexport interface MessageBuilder {\n  (props: {}): string;\n}\n\nexport interface CustomErrorProps {\n  [key: string]: any;\n}\n\nexport interface CustomError {\n  new (\n    message?: MessageBuilder | string | CustomErrorProps,\n    props?: CustomErrorProps\n  ): Partial<MadcapError>;\n  __proto__?: {};\n  configure?: (config: {}) => void;\n}\n\nfunction arePropsValid(props: any): props is CustomErrorProps {\n  return (\n    typeof props.message === 'string' || typeof props.message === 'function'\n  );\n}\n\nfunction validateMessage(props: CustomErrorProps | {}) {\n  if (!arePropsValid(props)) {\n    throw new TypeError(\n      'message either needs to be a string or a function that returns a string'\n    );\n  }\n  return true;\n}\n\nexport function createError(\n  name: string,\n  ParentError = Error,\n  defaultProps: CustomErrorProps = {}\n): CustomError {\n  if (typeof name !== 'string') {\n    throw new TypeError('expected \"name\" to be a string.');\n  }\n\n  if (\n    ParentError !== Error &&\n    !Error.prototype.isPrototypeOf(ParentError.prototype)\n  ) {\n    throw new TypeError(\n      'expected \"ParentError\" to extend Error or a subclass of Error'\n    );\n  }\n\n  validateMessage(defaultProps);\n\n  const {\n    message: defaultMessage,\n    ...restDefaultProps\n  } = defaultProps as CustomErrorProps;\n\n  let getMessage =\n    typeof defaultMessage === 'string' ? () => defaultMessage : defaultMessage;\n\n  const CustomError: any = function(\n    message?: MessageBuilder | string | CustomErrorProps,\n    props?: CustomErrorProps\n  ): Partial<MadcapError> {\n    if (!(this instanceof CustomError)) {\n      return new (CustomError as CustomError)(message, props);\n    }\n\n    if (arguments.length === 1) {\n      props = message as CustomErrorProps;\n      message = props.message;\n    }\n\n    const proxy = new ParentError();\n\n    Object.setPrototypeOf(proxy, Object.getPrototypeOf(this));\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(proxy, CustomError);\n    }\n\n    Object.assign(proxy, props);\n\n    proxy.name = name;\n\n    proxy.message =\n      typeof message === 'function'\n        ? message(proxy)\n        : message || getMessage(proxy);\n\n    return proxy;\n  };\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(CustomError, ParentError);\n  } else {\n    CustomError.__proto__ = ParentError;\n  }\n\n  Object.defineProperty(CustomError, 'name', {\n    value: name,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  });\n\n  CustomError.configure = function(config: CustomErrorProps) {\n    validateMessage(config);\n    if (\n      typeof config.message !== 'string' &&\n      typeof config.message !== 'function'\n    ) {\n      throw new TypeError(\n        'message either needs to be a string or a function that returns a string'\n      );\n    } else {\n      getMessage =\n        typeof config.message === 'string'\n          ? () => config.message\n          : config.message;\n    }\n    const { message, ...configRest } = config;\n    Object.assign(CustomError.prototype, configRest);\n  };\n\n  CustomError.prototype = Object.create(ParentError.prototype, {\n    constructor: {\n      value: CustomError,\n      enumerable: false,\n      configurable: true,\n      writable: true\n    },\n    toString: {\n      value: function() {\n        return 'foo';\n      },\n      enumerable: false,\n      configurable: true,\n      writable: true\n    }\n  });\n\n  Object.assign(CustomError.prototype, restDefaultProps);\n\n  return CustomError as CustomError;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/lib/createError.ts","import { MadcapError } from '../lib/createError';\nimport { Attempt as AttemptType } from '../index';\n\ndeclare var __DEBUG__: boolean;\n\nclass Attempt {\n  location: string | void;\n  constructor(attempt: AttemptType) {\n    this.location = attempt.location;\n  }\n}\n\nexport function consoleReporter(error: MadcapError): MadcapError | void {\n  if (__DEBUG__) {\n    console.group('%c%s', 'color: red', error.message);\n    console.error(error);\n    console.log(\n      `Location: ${location.origin}${error.fileName}:${error.lineNumber}:${\n        error.columnNumber\n      }\\n`\n    );\n    if (error.attempts) {\n      const attemptsReportStr: string = error.attempts.reduce(\n        (report, attempt, index): string => {\n          report += '%d)    Name: %s\\n';\n          report += '   Context: %O\\n';\n          report += `  Location: %s\\n`;\n          report += '\\n';\n          return report;\n        },\n        ''\n      );\n      const attemptsReportLogValues: any[] = error.attempts.reduce<any[]>(\n        (report, attempt, index): any[] => {\n          report.push(index + 1);\n          report.push(attempt.name);\n          report.push(attempt.context || 'none provided');\n          report.push(location.origin + attempt.location);\n          return report;\n        },\n        []\n      );\n      console.log(\n        `Attempts:\\n\\n${attemptsReportStr}`,\n        ...attemptsReportLogValues\n      );\n    }\n  }\n  return error;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/reporters/console.ts","import { MadcapError } from '../lib/createError';\n\nexport function retryThenRecover(\n  error: MadcapError /*, retry, retryTimes, recover*/\n) {\n  console.log(error);\n  // if (error.retry && error.retriedCount) {\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/handlers/retryThenRecover.ts","import * as StackTrace from 'stacktrace-js';\nimport { MadcapError, createError } from './lib/createError';\nimport { consoleReporter } from './reporters';\nimport { retryThenRecover } from './handlers';\nimport { UndefinedAttemptError } from './errors/UndefinedAttemptError';\nimport {\n  StrategyMap,\n  isStrategyMap,\n  createReportStrategy,\n  createHandleStrategy,\n  ErrorHandler,\n  Strategy\n} from './lib/strategy';\nimport { StackFrame } from 'stacktrace-js';\n\nexport interface MadcapApi {\n  configure(newConfig: Partial<Config>): Config;\n  attempt(\n    name: AttemptName,\n    fn: AttemptFunction,\n    pastAttempts?: Attempt[]\n  ): Promise<any>;\n  cleanStack(\n    stackFrame: StackTrace.StackFrame,\n    index?: number,\n    stackFrames?: StackTrace.StackFrame[],\n    removeFirst?: boolean\n  ): boolean;\n\n  config: Partial<Config>;\n}\n\nexport declare type AttemptName = string;\n\nexport declare type Attempt = {\n  name: AttemptName;\n  function: AttemptFunction;\n  stackFrames: StackTrace.StackFrame[];\n  context: any;\n  location: string | void;\n};\n\nexport interface Retry {\n  count: number;\n  returnValue: any;\n  error?: MadcapError;\n}\n\nexport interface AttemptFactory {\n  (name: AttemptName, fn: AttemptFunction, pastAttempts?: Attempt[]): Promise<\n    any\n  >;\n  (\n    name: AttemptName,\n    context: any,\n    fn: AttemptFunction,\n    pastAttempts?: Attempt[]\n  ): Promise<any>;\n  (\n    name: AttemptName,\n    contextOrFn?: any,\n    fnOrPastAttempts?: Attempt[] | AttemptFunction,\n    pastAttempts?: Attempt[]\n  ): Promise<any>;\n}\n\nexport interface AttemptFunction {\n  (attemptFactory: AttemptFactory): any;\n}\n\nexport interface Config {\n  report: ErrorHandler | Strategy;\n  handle: ErrorHandler | Strategy;\n  allowUndefinedAttempts?: boolean;\n  stackTraceLimit?: number;\n}\n\nexport type AttemptsMap = Map<AttemptFunction, Attempt[]>;\n\nfunction warnToConfigureHandle(): void {\n  console.warn('You need to configure a handler');\n}\n\nfunction isAttemptFunction(a: any): a is AttemptFunction {\n  return typeof a === 'function';\n}\n// sdfsdf\nfunction cleanStack(\n  stackFrame: StackTrace.StackFrame,\n  index?: number,\n  stackFrames?: StackTrace.StackFrame[],\n  removeFirst?: boolean\n): boolean {\n  const isAttemptFn =\n    stackFrame.functionName && stackFrame.functionName.endsWith('attempt');\n  if (removeFirst) {\n    return index !== 0 && !isAttemptFn;\n  }\n  return index === 0 || !isAttemptFn;\n}\n\nconst cleanAttemptStack = (\n  stackFrame: StackTrace.StackFrame,\n  index?: number,\n  stackFrames?: StackTrace.StackFrame[]\n) => cleanStack(stackFrame, index, stackFrames, true);\n\nfunction Madcap(initConfig: Config): MadcapApi | Partial<MadcapApi> {\n  /*\n   * A Map instance with shape Map<AttemptFunction, Attempt[]>, held in the\n   * Madcap function closure, that stores attempt data. This data supplies\n   * the .attemptRoot (Function) and .attempts (Attempt[]) properties to errors.\n   */\n  const attemptsMap: AttemptsMap = new Map();\n\n  const config: Config = {\n    report: consoleReporter,\n    handle: warnToConfigureHandle,\n    allowUndefinedAttempts: false\n  };\n\n  if (typeof initConfig === 'object') {\n    configure(initConfig);\n  }\n\n  function configure(mergeConfig: Partial<Config>): Config {\n    if (isStrategyMap(mergeConfig.report)) {\n      mergeConfig.report = createReportStrategy(mergeConfig.report!);\n    }\n\n    if (isStrategyMap(mergeConfig.handle)) {\n      mergeConfig.handle = createHandleStrategy(mergeConfig.handle);\n    }\n\n    Object.assign(config, mergeConfig);\n\n    // By default, v8 includes the 10 topmost stack frames\n    // https://github.com/v8/v8/wiki/Stack-Trace-API#basic-stack-traces\n    // Can be configured by setting Error.stackTraceLimit = number | Infinity\n    if (config.stackTraceLimit) {\n      Error.stackTraceLimit = config.stackTraceLimit;\n    }\n\n    return config;\n  }\n\n  function prepareError(\n    error: MadcapError,\n    stackFrames?: StackTrace.StackFrame[]\n  ): MadcapError {\n    stackFrames = error.trace! || stackFrames;\n    const topFrame: StackTrace.StackFrame = stackFrames[0];\n\n    const attempts =\n      attemptsMap.get(error.attemptFn) ||\n      [...Array.from(attemptsMap.values())][0] ||\n      [];\n    const attemptName =\n      (attempts[0] && attempts[0].name) || 'before first attempt';\n\n    const msg = (error.message = `[APP/${attemptName}] ${error.message}`);\n\n    if (stackFrames.length === 1) {\n      const shouldAppendFrames = !attempts.some((attempt: Attempt) => {\n        const attemptFrames = attempt.stackFrames;\n        return attemptFrames.some(\n          frame =>\n            frame.fileName === topFrame.fileName &&\n            frame.lineNumber === topFrame.lineNumber &&\n            frame.columnNumber === topFrame.columnNumber\n        );\n      });\n      if (shouldAppendFrames) {\n        stackFrames = attempts.reduce(\n          (frames: StackTrace.StackFrame[], attempt: Attempt) => [\n            ...frames,\n            ...attempt.stackFrames\n          ],\n          [stackFrames[0]]\n        );\n      }\n    }\n\n    const stackString = stackFrames\n      .filter(l => l.source)\n      .map(f => f.source)\n      .join('\\n');\n\n    error.message = msg;\n    error.stack = stackString;\n    error.fileName = topFrame.fileName;\n    error.lineNumber = topFrame.lineNumber;\n    error.columnNumber = topFrame.columnNumber;\n    error.attempts = attempts;\n    return error;\n  }\n\n  function getAttemptLocation(\n    stackFrames: StackTrace.StackFrame[]\n  ): string | void {\n    // const revStackFrames = stackFrames.slice(0).reverse();\n    const attemptFrame = stackFrames.find(\n      stackFrame => !stackFrame.fileName.includes('madcap-core')\n    );\n    if (attemptFrame) {\n      return `${attemptFrame!.fileName}:${attemptFrame.lineNumber}:${\n        attemptFrame.columnNumber\n      }`;\n    }\n  }\n\n  /**\n   * Wrap a function with a Promise having at the end of its chain\n   * a catch callback that reports and handles errors.\n   *\n   * @param {AttemptName} name\n   * @param {AttemptFunction | any} contextOrFn\n   * @param {Attempt[] | AttemptFunction} [pastAttempts]\n   * @returns {Promise<any>}\n   */\n  function attempt(\n    name: AttemptName,\n    fn: AttemptFunction,\n    pastAttempts?: Attempt[]\n  ): Promise<any>;\n  function attempt(\n    name: AttemptName,\n    context: any,\n    fn: AttemptFunction,\n    pastAttempts?: Attempt[]\n  ): Promise<any>;\n  async function attempt(\n    name: AttemptName,\n    contextOrFn?: any,\n    fnOrPastAttempts?: Attempt[] | AttemptFunction,\n    pastAttempts?: Attempt[]\n  ): Promise<any> {\n    let context: any;\n    let fn: AttemptFunction;\n    if (isAttemptFunction(fnOrPastAttempts)) {\n      context = contextOrFn;\n      fn = fnOrPastAttempts;\n    } else {\n      fn = contextOrFn;\n      pastAttempts = fnOrPastAttempts;\n    }\n\n    const stackFrames = await StackTrace.get();\n\n    let attempts = pastAttempts || attemptsMap.get(fn) || [];\n\n    const location = getAttemptLocation(stackFrames);\n\n    if (!attempts.length) {\n      attempts = [{ name, function: fn, stackFrames, context, location }];\n      attemptsMap.set(fn, attempts);\n      const ret = attempt(name, fn).catch(async (error: MadcapError) => {\n        if (!error.trace) {\n          error.trace = await StackTrace.fromError(error);\n          const newStackFrames = attempts\n            .reverse()\n            .map((attempt: Attempt) => attempt.stackFrames)\n            .reduce(\n              (\n                result: StackTrace.StackFrame[],\n                frames: StackTrace.StackFrame[]\n              ) => result.concat(frames),\n              []\n            );\n          error.trace = error.trace.concat(newStackFrames);\n          error.attemptFn = fn;\n          error.attempts = attempts.reverse();\n\n          const errorEvent = new ErrorEvent('error', {\n            filename: error.fileName,\n            lineno: error.lineNumber,\n            colno: error.columnNumber,\n            message: error.message,\n            error\n          });\n          window.dispatchEvent(errorEvent);\n        }\n\n        // Prevent a subsequent .then callback from running\n        throw error;\n      });\n      return ret;\n    }\n\n    if (fn !== attempts[0].function) {\n      attempts.push({ name, function: fn, stackFrames, context, location });\n    }\n\n    function subattempt(name: AttemptName, fn: AttemptFunction): Promise<any> {\n      return attempt(name, fn, attempts);\n    }\n\n    // try {\n    const ret = fn(subattempt);\n    if (ret === undefined) {\n      if (!config.allowUndefinedAttempts) {\n        throw new UndefinedAttemptError({ attemptName: name });\n      }\n      // Just nag instead. No throwing nonsense.\n      console.warn(\n        `Attempt ${name} returns undefined. Is it a work in progress?`\n      );\n    }\n    return ret;\n    // } catch (error) {\n    //   return Promise.reject(error);\n    // }\n  }\n\n  if (typeof window !== 'undefined') {\n    window.onerror = (msg, url, line, col, error: MadcapError) => {\n      if (error && !error.attempts) {\n        error.isHandled = true;\n        StackTrace.fromError(error)\n          .then(prepareError.bind(null, error))\n          .then(config.report!.bind(null, error))\n          .then(config.handle!.bind(null, error));\n      }\n      // Return true to prevent the browser from further handling the error\n      return true;\n    };\n\n    window.addEventListener(\n      'unhandledrejection',\n      (e: PromiseRejectionEvent) => {\n        e.preventDefault();\n        const error = e.reason;\n        if (error.isHandled) return;\n        StackTrace.fromError(error)\n          .then(prepareError.bind(null, error))\n          .then(config.report!.bind(null, error))\n          .then(config.handle!.bind(null, error));\n      }\n    );\n  }\n\n  // Public Madcap strategy API\n  return {\n    attempt,\n    configure\n  };\n}\n\nconst reporters = {\n  consoleReporter\n};\n\nconst handlers = {\n  retryThenRecover\n};\n\nconst errors = {};\n\nexport {\n  Madcap as default,\n  createError,\n  createReportStrategy,\n  createHandleStrategy,\n  reporters,\n  handlers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/index.ts","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\n    } else {\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\n    }\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\n    var _options = {\n        filter: function(stackframe) {\n            // Filter out stackframes for this library by default\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\n        },\n        sourceCache: {}\n    };\n\n    var _generateError = function StackTrace$$GenerateError() {\n        try {\n            // Error must be thrown to get stack in IE\n            throw new Error();\n        } catch (err) {\n            return err;\n        }\n    };\n\n    /**\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\n     * Does not do deep merges.\n     *\n     * @param {Object} first base object\n     * @param {Object} second overrides\n     * @returns {Object} merged first and second\n     * @private\n     */\n    function _merge(first, second) {\n        var target = {};\n\n        [first, second].forEach(function(obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    target[prop] = obj[prop];\n                }\n            }\n            return target;\n        });\n\n        return target;\n    }\n\n    function _isShapedLikeParsableError(err) {\n        return err.stack || err['opera#sourceloc'];\n    }\n\n    function _filtered(stackframes, filter) {\n        if (typeof filter === 'function') {\n            return stackframes.filter(filter);\n        }\n        return stackframes;\n    }\n\n    return {\n        /**\n         * Get a backtrace from invocation point.\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        get: function StackTrace$$get(opts) {\n            var err = _generateError();\n            return _isShapedLikeParsableError(err) ? this.fromError(err, opts) : this.generateArtificially(opts);\n        },\n\n        /**\n         * Get a backtrace from invocation point.\n         * IMPORTANT: Does not handle source maps or guess function names!\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        getSync: function StackTrace$$getSync(opts) {\n            opts = _merge(_options, opts);\n            var err = _generateError();\n            var stack = _isShapedLikeParsableError(err) ? ErrorStackParser.parse(err) : StackGenerator.backtrace(opts);\n            return _filtered(stack, opts.filter);\n        },\n\n        /**\n         * Given an error object, parse it.\n         *\n         * @param {Error} error object\n         * @param {Object} opts\n         * @returns {Promise} for Array[StackFrame}\n         */\n        fromError: function StackTrace$$fromError(error, opts) {\n            opts = _merge(_options, opts);\n            var gps = new StackTraceGPS(opts);\n            return new Promise(function(resolve) {\n                var stackframes = _filtered(ErrorStackParser.parse(error), opts.filter);\n                resolve(Promise.all(stackframes.map(function(sf) {\n                    return new Promise(function(resolve) {\n                        function resolveOriginal() {\n                            resolve(sf);\n                        }\n\n                        gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\n                    });\n                })));\n            }.bind(this));\n        },\n\n        /**\n         * Use StackGenerator to generate a backtrace.\n         *\n         * @param {Object} opts\n         * @returns {Promise} of Array[StackFrame]\n         */\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\n            opts = _merge(_options, opts);\n            var stackFrames = StackGenerator.backtrace(opts);\n            if (typeof opts.filter === 'function') {\n                stackFrames = stackFrames.filter(opts.filter);\n            }\n            return Promise.resolve(stackFrames);\n        },\n\n        /**\n         * Given a function, wrap it such that invocations trigger a callback that\n         * is called with a stack trace.\n         *\n         * @param {Function} fn to be instrumented\n         * @param {Function} callback function to call with a stack trace on invocation\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\n         * @param {Object} thisArg optional context object (e.g. window)\n         */\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                // Already instrumented, return given Function\n                return fn;\n            }\n\n            var instrumented = function StackTrace$$instrumented() {\n                try {\n                    this.get().then(callback, errback)['catch'](errback);\n                    return fn.apply(thisArg || this, arguments);\n                } catch (e) {\n                    if (_isShapedLikeParsableError(e)) {\n                        this.fromError(e).then(callback, errback)['catch'](errback);\n                    }\n                    throw e;\n                }\n            }.bind(this);\n            instrumented.__stacktraceOriginalFn = fn;\n\n            return instrumented;\n        },\n\n        /**\n         * Given a function that has been instrumented,\n         * revert the function to it's original (non-instrumented) state.\n         *\n         * @param {Function} fn to de-instrument\n         */\n        deinstrument: function StackTrace$$deinstrument(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot de-instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                return fn.__stacktraceOriginalFn;\n            } else {\n                // Function not instrumented, return original\n                return fn;\n            }\n        },\n\n        /**\n         * Given an error message and Array of StackFrames, serialize and POST to given URL.\n         *\n         * @param {Array} stackframes\n         * @param {String} url\n         * @param {String} errorMsg\n         * @param {Object} requestOptions\n         */\n        report: function StackTrace$$report(stackframes, url, errorMsg, requestOptions) {\n            return new Promise(function(resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.onerror = reject;\n                req.onreadystatechange = function onreadystatechange() {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 400) {\n                            resolve(req.responseText);\n                        } else {\n                            reject(new Error('POST to ' + url + ' failed with status: ' + req.status));\n                        }\n                    }\n                };\n                req.open('post', url);\n\n                // Set request headers\n                req.setRequestHeader('Content-Type', 'application/json');\n                if (requestOptions && typeof requestOptions.headers === 'object') {\n                    var headers = requestOptions.headers;\n                    for (var header in headers) {\n                        if (headers.hasOwnProperty(header)) {\n                            req.setRequestHeader(header, headers[header]);\n                        }\n                    }\n                }\n\n                var reportPayload = {stack: stackframes};\n                if (errorMsg !== undefined && errorMsg !== null) {\n                    reportPayload.message = errorMsg;\n                }\n\n                req.send(JSON.stringify(reportPayload));\n            });\n        }\n    };\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/stacktrace-js/stacktrace.js\n// module id = 9\n// module chunks = 0","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/error-stack-parser/error-stack-parser.js\n// module id = 10\n// module chunks = 0","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/stack-generator/stack-generator.js\n// module id = 11\n// module chunks = 0","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\n    }\n}(this, function(SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param {String} url\n     * @returns {Promise} with response text if fulfilled\n     */\n    function _xdr(url) {\n        return new Promise(function(resolve, reject) {\n            var req = new XMLHttpRequest();\n            req.open('get', url);\n            req.onerror = reject;\n            req.onreadystatechange = function onreadystatechange() {\n                if (req.readyState === 4) {\n                    if ((req.status >= 200 && req.status < 300) ||\n                        (url.substr(0, 7) === 'file://' && req.responseText)) {\n                        resolve(req.responseText);\n                    } else {\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\n                    }\n                }\n            };\n            req.send();\n        });\n\n    }\n\n    /**\n     * Convert a Base64-encoded string into its original representation.\n     * Used for inline sourcemaps.\n     *\n     * @param {String} b64str Base-64 encoded string\n     * @returns {String} original representation of the base64-encoded string.\n     */\n    function _atob(b64str) {\n        if (typeof window !== 'undefined' && window.atob) {\n            return window.atob(b64str);\n        } else {\n            throw new Error('You must supply a polyfill for window.atob in this environment');\n        }\n    }\n\n    function _parseJson(string) {\n        if (typeof JSON !== 'undefined' && JSON.parse) {\n            return JSON.parse(string);\n        } else {\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\n        }\n    }\n\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\n        var syntaxes = [\n            // {name} = function ({args}) TODO args capture\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/,\n            // function {name}({args}) m[1]=name m[2]=args\n            /function\\s+([^('\"`]*?)\\s*\\(([^)]*)\\)/,\n            // {name} = eval()\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/,\n            // fn_name() {\n            /\\b(?!(?:if|for|switch|while|with|catch)\\b)(?:(?:static)\\s+)?(\\S+)\\s*\\(.*?\\)\\s*\\{/,\n            // {name} = () => {\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*\\(.*?\\)\\s*=>/\n        ];\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '';\n        var maxLines = Math.min(lineNumber, 20);\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            var line = lines[lineNumber - i - 1];\n            var commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                var len = syntaxes.length;\n                for (var index = 0; index < len; index++) {\n                    var m = syntaxes[index].exec(code);\n                    if (m && m[1]) {\n                        return m[1];\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' ||\n            stackframe.lineNumber % 1 !== 0 ||\n            stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' ||\n            stackframe.columnNumber % 1 !== 0 ||\n            stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var sourceMappingUrlRegExp = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/mg;\n        var lastSourceMappingUrl;\n        var matchSourceMappingUrl;\n        while (matchSourceMappingUrl = sourceMappingUrlRegExp.exec(source)) { // jshint ignore:line\n            lastSourceMappingUrl = matchSourceMappingUrl[1];\n        }\n        if (lastSourceMappingUrl) {\n            return lastSourceMappingUrl;\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache) {\n        return new Promise(function(resolve, reject) {\n            var loc = sourceMapConsumer.originalPositionFor({\n                line: stackframe.lineNumber,\n                column: stackframe.columnNumber\n            });\n\n            if (loc.source) {\n                // cache mapped sources\n                var mappedSource = sourceMapConsumer.sourceContentFor(loc.source);\n                if (mappedSource) {\n                    sourceCache[loc.source] = mappedSource;\n                }\n\n                resolve(\n                    // given stackframe and source location, update stackframe\n                    new StackFrame({\n                        functionName: loc.name || stackframe.functionName,\n                        args: stackframe.args,\n                        fileName: loc.source,\n                        lineNumber: loc.line,\n                        columnNumber: loc.column\n                    }));\n            } else {\n                reject(new Error('Could not get original source for given stackframe and source map'));\n            }\n        });\n    }\n\n    /**\n     * @constructor\n     * @param {Object} opts\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.sourceMapConsumerCache = {/path/file.js.map: SourceMapConsumer}\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     *      opts.ajax = Promise returning function to make X-Domain requests\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n        this.sourceMapConsumerCache = opts.sourceMapConsumerCache || {};\n\n        this.ajax = opts.ajax || _xdr;\n\n        this._atob = opts.atob || _atob;\n\n        this._get = function _get(location) {\n            return new Promise(function(resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        // data URLs can have parameters.\n                        // see http://tools.ietf.org/html/rfc2397\n                        var supportedEncodingRegexp =\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                        var match = location.match(supportedEncodingRegexp);\n                        if (match) {\n                            var sourceMapStart = match[0].length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        } else {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        }\n                    } else {\n                        var xhrPromise = this.ajax(location, {method: 'get'});\n                        // Cache the Promise to prevent duplicate in-flight requests\n                        this.sourceCache[location] = xhrPromise;\n                        xhrPromise.then(resolve, reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Creating SourceMapConsumers is expensive, so this wraps the creation of a\n         * SourceMapConsumer in a per-instance cache.\n         *\n         * @param {String} sourceMappingURL = URL to fetch source map from\n         * @param {String} defaultSourceRoot = Default source root for source map if undefined\n         * @returns {Promise} that resolves a SourceMapConsumer\n         */\n        this._getSourceMapConsumer = function _getSourceMapConsumer(sourceMappingURL, defaultSourceRoot) {\n            return new Promise(function(resolve, reject) {\n                if (this.sourceMapConsumerCache[sourceMappingURL]) {\n                    resolve(this.sourceMapConsumerCache[sourceMappingURL]);\n                } else {\n                    var sourceMapConsumerPromise = new Promise(function(resolve, reject) {\n                        return this._get(sourceMappingURL).then(function(sourceMapSource) {\n                            if (typeof sourceMapSource === 'string') {\n                                sourceMapSource = _parseJson(sourceMapSource.replace(/^\\)\\]\\}'/, ''));\n                            }\n                            if (typeof sourceMapSource.sourceRoot === 'undefined') {\n                                sourceMapSource.sourceRoot = defaultSourceRoot;\n                            }\n\n                            resolve(new SourceMap.SourceMapConsumer(sourceMapSource));\n                        }, reject);\n                    }.bind(this));\n                    this.sourceMapConsumerCache[sourceMappingURL] = sourceMapConsumerPromise;\n                    resolve(sourceMapConsumerPromise);\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param {StackFrame} stackframe object\n         * @returns {Promise} that resolves with with source-mapped StackFrame\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function(resolve, reject) {\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var lineNumber = stackframe.lineNumber;\n                    var columnNumber = stackframe.columnNumber;\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                    // Only replace functionName if we found something\n                    if (guessedFunctionName) {\n                        resolve(new StackFrame({\n                            functionName: guessedFunctionName,\n                            args: stackframe.args,\n                            fileName: stackframe.fileName,\n                            lineNumber: lineNumber,\n                            columnNumber: columnNumber\n                        }));\n                    } else {\n                        resolve(stackframe);\n                    }\n                }, reject)['catch'](reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var sourceCache = this.sourceCache;\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function(source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\n                    var defaultSourceRoot = fileName.substring(0, fileName.lastIndexOf('/') + 1);\n\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\n                        sourceMappingURL = defaultSourceRoot + sourceMappingURL;\n                    }\n\n                    return this._getSourceMapConsumer(sourceMappingURL, defaultSourceRoot)\n                        .then(function(sourceMapConsumer) {\n                            return _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache)\n                                .then(resolve)['catch'](function() {\n                                resolve(stackframe);\n                            });\n                        });\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/stacktrace-gps/stacktrace-gps.js\n// module id = 12\n// module chunks = 0","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/source-map.js\n// module id = 13\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/base64.js\n// module id = 14\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/mapping-list.js\n// module id = 15\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/source-map-consumer.js\n// module id = 16\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/binary-search.js\n// module id = 17\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/quick-sort.js\n// module id = 18\n// module chunks = 0","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are removed from this array, by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var shiftNextLine = function() {\n      var lineContents = remainingLines.shift();\n      // The last line of a file might not have a newline.\n      var newLine = remainingLines.shift() || \"\";\n      return lineContents + newLine;\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[0];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[0];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLines.length > 0) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/madcap-core/node_modules/source-map/lib/source-node.js\n// module id = 19\n// module chunks = 0","export * from './console';\nexport * from './errorOverlay';\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/reporters/index.ts","export function errorOverlay(): void {}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/reporters/errorOverlay.ts","export * from './retryThenRecover';\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/handlers/index.ts","import { createError, MadcapError } from '../lib/createError';\n\nexport const UndefinedAttemptError = createError(\n  'UndefinedAttempError',\n  Error,\n  {\n    attemptName: '',\n    message: (e: MadcapError) => {\n      return `Attempt \"${e.attemptName}\" failed because undefined was returned`;\n    }\n  }\n);\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/errors/UndefinedAttemptError.ts","import { MadcapError } from '../lib/createError';\nimport { consoleReporter } from '../reporters/console';\nimport { retryThenRecover } from '../handlers/retryThenRecover';\n\nexport type StrategyMap =\n  | Map<Partial<MadcapError>, ErrorHandler>\n  | [[Partial<MadcapError>, ErrorHandler]];\n\nexport interface ErrorHandler {\n  (error: MadcapError): MadcapError | void;\n}\n\nexport interface Strategy extends ErrorHandler {\n  __default__?: ErrorHandler;\n  add?: (constr: Error, strategy: ErrorHandler) => void;\n  remove?: (constr: Error, strategy: ErrorHandler) => void;\n  setDefault?: (strategy: ErrorHandler) => ErrorHandler;\n}\nexport function isStrategyMap(strategy: any): strategy is StrategyMap {\n  return strategy && (Array.isArray(strategy) || strategy instanceof Map);\n}\n\nexport function createStrategy(strategyDef: StrategyMap): Strategy {\n  const strategyMap = new Map(strategyDef);\n  const strategy: Strategy = (error: MadcapError): MadcapError | void => {\n    let resolvedStrategy;\n    const match = Array.from(strategyMap.keys()).find(\n      (constr: Function) => error instanceof constr\n    );\n    if (match) {\n      resolvedStrategy = strategyMap.get(match);\n    } else {\n      if (!strategy.__default__) return;\n      resolvedStrategy = strategy.__default__;\n    }\n    resolvedStrategy!(error);\n  };\n\n  strategy.add = (constr: Error, handler: ErrorHandler) =>\n    strategyMap.set(constr, handler);\n  strategy.remove = (constr: Error, handler: ErrorHandler) =>\n    strategyMap.delete(constr);\n  strategy.setDefault = (handler: ErrorHandler): ErrorHandler => {\n    strategy.__default__ = handler;\n    return handler;\n  };\n\n  return strategy;\n}\n\nexport function createReportStrategy(strategyDef: StrategyMap): Strategy {\n  const strategy = createStrategy(strategyDef);\n  strategy.setDefault!(consoleReporter);\n  return strategy;\n}\n\nexport function createHandleStrategy(strategyDef: StrategyMap): Strategy {\n  const strategy = createStrategy(strategyDef);\n  strategy.setDefault!(retryThenRecover);\n  return strategy;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-core/src/lib/strategy.ts"],"sourceRoot":""}