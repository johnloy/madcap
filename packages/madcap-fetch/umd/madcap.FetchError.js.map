{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0e88f2e6520d16bfbe6e","webpack:///./packages/madcap-fetch/src/errors/FetchError.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAA2D;AAClG,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;ACeA;;;;;;;;;;;EAWE","file":"madcap.FetchError.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FetchError\"] = factory();\n\telse\n\t\troot[\"Madcap\"] = root[\"Madcap\"] || {}, root[\"Madcap\"][\"errors\"] = root[\"Madcap\"][\"errors\"] || {}, root[\"Madcap\"][\"errors\"][\"FetchError\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0e88f2e6520d16bfbe6e","import { MadcapError, AttemptFactory, createError } from 'madcap';\n\ntype Milliseconds = number | string; // 300 | 300ms\ntype Seconds = string; // .5s\ntype IsoDateString = string; // 2017-12-30T13:34:44.327Z\ntype Timestamp = number; // 1514641029179, e.g. new Date().getTime() =>\ntype TimeoutOption = Milliseconds | Seconds | IsoDateString | Timestamp | Date;\n\n/*\nFetchError\n    FetchRedirectError\n    FetchNetworkError\n    FetchTimeoutError\n    FetchInvalidResponseError\n        FetchNullResponseError\n        FetchContentTypeError\n    HttpError\n        HttpNotFoundError\n        HttpUnauthorizedError\n\nfetch init:\n-----------\nmethod\nbody\nmode\ncache\nredirect \nreferrer\nreferrerPolicy\nintegrity\nkeepalive\nsignal\n\n*/\n\ninterface MadcapFetch {\n  fetch(input: RequestInfo, init?: MadcapFetchInit): Promise<Response>;\n}\n\ninterface MadcapFetchInit extends RequestInit {\n  attempt: AttemptFactory;\n  timeout?: TimeoutOption;\n  canRedirect?: boolean; // fails if redirect is true on response\n  acceptNullResponse?: boolean;\n  gracefulNullResponse?: boolean;\n  parseResponse?: (response: Response) => any;\n  validateResponse?: (parsedResponse: any) => boolean;\n  failStatuses?: number[];\n  okStatuses?: number[];\n  failContentTypes?: string[];\n  okContentTypes?: string[];\n}\n\ninterface FetchErrorTimingInfo {\n  timedOut: boolean;\n  request: number;\n  response: number;\n  parse: number;\n  validate: number;\n}\n\ninterface FetchErrorProps {\n  url: USVString;\n  status: number;\n  statusText: string;\n  requestInit: RequestInit;\n  request: Request;\n  response: Response;\n  error: any; // TypeError, AuthenticationError\n  timing: FetchErrorTimingInfo;\n}\n\ninterface FetchError extends FetchErrorProps, MadcapError {\n  new (props: FetchErrorProps): FetchError;\n}\n\n/*\nfetch('/users/1', {\n  validateResponse(parsedResponse) {\n    // cause a FetchError to throw with a .message of the return value\n    return parsedResponse.errorMessage;\n    // rejects the fetch with this error\n    throw new FetchError('something went wrong');\n    // rejects the fetch with a FetchError, using the message from the custom error, with an error prop of the AuthenticationError\n    throw new AuthenticationError('wrong password');\n  }\n});\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./packages/madcap-fetch/src/errors/FetchError.ts"],"sourceRoot":""}